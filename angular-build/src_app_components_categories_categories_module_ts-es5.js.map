{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_7__","CategoryDetailComponent","formBuilder","categoryService","ngbActiveModal","messageService","modalFile","src_app_shared_components_modals_models_modal_model__WEBPACK_IMPORTED_MODULE_2__","typeFile","multiBoolen","enityType","changes","categoriesForm","controls","invalid","alert","src_app_lib_data_models__WEBPACK_IMPORTED_MODULE_0__","submitted","category","name","value","description","imageUrl","createdBy","item","createdByName","deletedBy","deletedByName","isActive","isDeleted","updatedBy","updatedByName","files","listFile","id","save","then","notification","close","er","error","message","_a","JSON","stringify","_b","console","log","group","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","modalHeader","title","modalFooter","event","dismiss","loadItem","fileURL","push","add","remove","forEach","e","i","includes","splice","removeAll","setValue","join","selectors","features","src_app_lib_data_services_categories_category_service__WEBPACK_IMPORTED_MODULE_1__","decls","vars","consts","template","ctx","routes","path","children","component","_list_categories_list_categories_component__WEBPACK_IMPORTED_MODULE_1__","data","breadcrumb","_categories_details_categories_details_component__WEBPACK_IMPORTED_MODULE_0__","CategoriesRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","imports","exports","CategoriesModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_categories_routing_module__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__","src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_3__","ng2_smart_table__WEBPACK_IMPORTED_MODULE_8__","declarations","_list_categories_list_categories_component__WEBPACK_IMPORTED_MODULE_0__","_categories_details_categories_details_component__WEBPACK_IMPORTED_MODULE_1__","ListCategoriesComponent","modalService","mode","actions","position","columns","type","renderComponent","src_app_shared_components_custom_view_cell_string_custom_view_cell_string_component__WEBPACK_IMPORTED_MODULE_3__","fetch","confirm","res","isConfirmed","modalRef","open","_categories_details_categories_details_component__WEBPACK_IMPORTED_MODULE_4__","size","componentInstance","result","reason","closeResult","getDismissReason","get","params","hasError","categories","results","_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__","pageIndex","src_app_lib_data_services_categories_category_service__WEBPACK_IMPORTED_MODULE_2__","src_app_lib_data_services__WEBPACK_IMPORTED_MODULE_1__","CustomViewCellStringComponent","inputs","rowData","_angular_core__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/components/categories/categories-details/categories-details.component.html","webpack:///src/app/components/categories/categories-details/categories-details.component.ts","webpack:///src/app/components/categories/categories-routing.module.ts","webpack:///src/app/components/categories/categories.module.ts","webpack:///src/app/components/categories/list-categories/list-categories.component.html","webpack:///src/app/components/categories/list-categories/list-categories.component.ts","webpack:///src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.ts","webpack:///src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.html"],"sourcesContent":["<app-modal-header\r\n  [data]=\"modalHeader\"\r\n  (onAction)=\"close($event)\"\r\n></app-modal-header>\r\n<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"card tab2-card\">\r\n        <div class=\"card-body\">\r\n          <div\r\n            class=\"tab-pane fade active show\"\r\n            id=\"account\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"account-tab\"\r\n          >\r\n            <form\r\n              [formGroup]=\"categoriesForm\"\r\n              class=\"needs-validation user-add\"\r\n              novalidate=\"\"\r\n            >\r\n              <h4>Category Details</h4>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Name</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom0\"\r\n                  type=\"text\"\r\n                  required=\"\"\r\n                  formControlName=\"name\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid':\r\n                      (categoryFormsControl.name.touched || submitted) &&\r\n                      categoryFormsControl.name.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"invalid-feedback col-md-5 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (categoryFormsControl.name.touched || submitted) &&\r\n                      categoryFormsControl.name.errors?.required\r\n                    \"\r\n                    >Required</span\r\n                  >\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"categoryFormsControl.name.hasError('maxlength')\"\r\n                    >Max: 50 characters</span\r\n                  >\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"categoryFormsControl.name.hasError('minlength')\"\r\n                    >Min: 3 characters</span\r\n                  >\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Description</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom1\"\r\n                  type=\"text\"\r\n                  required=\"\"\r\n                  formControlName=\"description\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid':\r\n                      (categoryFormsControl.description.touched || submitted) &&\r\n                      categoryFormsControl.description.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"invalid-feedback col-md-5 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (categoryFormsControl.description.touched || submitted) &&\r\n                      categoryFormsControl.description.errors?.required\r\n                    \"\r\n                    >Required</span\r\n                  >\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      categoryFormsControl.description.hasError('maxlength')\r\n                    \"\r\n                    >Max: 100 characters</span\r\n                  >\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      categoryFormsControl.description.hasError('minlength')\r\n                    \"\r\n                    >Min: 3 characters</span\r\n                  >\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"\r\n                  >Image</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom2\"\r\n                  type=\"text\"\r\n                  required=\"\"\r\n                  formControlName=\"imageUrl\"\r\n                  hidden\r\n                />\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    (categoryFormsControl.imageUrl.touched || submitted) &&\r\n                    categoryFormsControl.imageUrl.errors?.required\r\n                  \"\r\n                  >Required</span\r\n                >\r\n                <div class=\"col-xl-8 col-md-7 p-0\">\r\n                  <app-upload-file\r\n                    [data]=\"modalFile\"\r\n                    [fileURL]=\"fileURL\"\r\n                    styleFile=\"width: 100%; height: auto;\"\r\n                    (onChange)=\"onChangeData($event)\"\r\n                  ></app-upload-file>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n<app-modal-footer [data]=\"modalFooter\" (onAction)=\"save()\"></app-modal-footer>\r\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TypeSweetAlertIcon } from 'src/app/lib/data/models';\r\nimport { CategoryModel } from 'src/app/lib/data/models/categories/category.model';\r\nimport { CategoryService } from 'src/app/lib/data/services/categories/category.service';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\n\r\nimport {\r\n  EntityType,\r\n  ModalFile,\r\n  ModalFooterModel,\r\n  ModalHeaderModel,\r\n  TypeFile,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\n@Component({\r\n  selector: 'app-categories-details',\r\n  templateUrl: './categories-details.component.html',\r\n  styleUrls: ['./categories-details.component.scss'],\r\n  providers: [CategoryService],\r\n})\r\nexport class CategoryDetailComponent implements OnInit {\r\n  public categoriesForm: FormGroup;\r\n  public modalHeader: ModalHeaderModel;\r\n  public modalFooter: ModalFooterModel;\r\n  public category: CategoryModel;\r\n  public modalFile: ModalFile;\r\n  public fileURL: (String | ArrayBuffer)[];\r\n  public item: any;\r\n  public regex: string =\r\n    '^[a-z|A-Z|ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂẾưăạảấầẩẫậắằẳẵặẹẻẽềềểếỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ|0-9 ,-.]*$';\r\n  submitted = false;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {}\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private categoryService: CategoryService,\r\n    private ngbActiveModal: NgbActiveModal,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.modalFile = new ModalFile();\r\n    this.modalFile.typeFile = TypeFile.IMAGE;\r\n    this.modalFile.multiBoolen = false;\r\n    this.modalFile.enityType = EntityType.CATEGORY;\r\n  }\r\n\r\n  get categoryFormsControl() {\r\n    return this.categoriesForm.controls;\r\n  }\r\n  save() {\r\n    if (this.categoriesForm.invalid) {\r\n      this.messageService.alert(\r\n        'Invalid Form\\n Make sure you input valid value !',\r\n        TypeSweetAlertIcon.ERROR\r\n      );\r\n      return;\r\n    }\r\n    this.submitted = true;\r\n    this.category = {\r\n      name: this.categoriesForm.value.name,\r\n      description: this.categoriesForm.value.description,\r\n      imageUrl: this.categoriesForm.value.imageUrl,\r\n      createdBy: this.item ? this.item.createdBy : this.item,\r\n      createdByName: this.item ? this.item.createdByName : this.item,\r\n      deletedBy: this.item ? this.item.deletedBy : this.item,\r\n      deletedByName: this.item ? this.item.deletedByName : this.item,\r\n      isActive: this.item ? this.item.isActive : this.item,\r\n      isDeleted: this.item ? this.item.isDeleted : this.item,\r\n      updatedBy: this.item ? this.item.updatedBy : this.item,\r\n      updatedByName: this.item ? this.item.updatedByName : this.item,\r\n      files: this.modalFile.listFile,\r\n      id: this.item ? this.item.id : '',\r\n    };\r\n    return this.categoryService\r\n      .save(this.category)\r\n      .then(() => {\r\n        this.messageService.notification(\r\n          this.item ? 'Update Success' : 'Create Success',\r\n          TypeSweetAlertIcon.SUCCESS\r\n        );\r\n        this.ngbActiveModal.close();\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n        console.log(er);\r\n      });\r\n  }\r\n\r\n  loadItem() {\r\n    this.categoriesForm = this.formBuilder.group({\r\n      name: [\r\n        this.item ? this.item.name : '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(50),\r\n          // Validators.pattern(this.regex),\r\n        ],\r\n      ],\r\n      description: [\r\n        this.item ? this.item.description : '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n          // Validators.pattern(this.regex),\r\n        ],\r\n      ],\r\n      imageUrl: [this.item ? this.item.imageUrl : ''],\r\n    });\r\n\r\n    this.modalHeader = new ModalHeaderModel();\r\n    this.modalHeader.title = this.item ? `Update ${this.item.name}` : `Add`;\r\n    this.modalFooter = new ModalFooterModel();\r\n    this.modalFooter.title = 'Save';\r\n  }\r\n\r\n  close(event: any) {\r\n    this.ngbActiveModal.dismiss();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadItem();\r\n    if (this.item) {\r\n      this.fileURL = [];\r\n      this.fileURL.push(this.item.imageUrl);\r\n    }\r\n  }\r\n\r\n  onChangeData(event: { add: string[]; remove: string; removeAll: boolean }) {\r\n    if (event == null) {\r\n      return;\r\n    }\r\n\r\n    if (!this.fileURL) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    if (event.add) {\r\n      this.fileURL = [...this.fileURL, ...event.add];\r\n    }\r\n\r\n    if (event.remove) {\r\n      this.fileURL.forEach((e: string, i) => {\r\n        if (e.includes(event.remove)) {\r\n          this.fileURL.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (event.removeAll) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    this.categoriesForm.controls.imageUrl.setValue(this.fileURL.join(','));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CategoryDetailComponent } from './categories-details/categories-details.component';\r\nimport { ListCategoriesComponent } from './list-categories/list-categories.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      children: [\r\n        {\r\n          path: 'list-categories',\r\n          component: ListCategoriesComponent,\r\n          data: {\r\n            title: \"Category List\",\r\n            breadcrumb: \"Category List\"\r\n          }\r\n        },\r\n        {\r\n          path: 'create-categories',\r\n          component: CategoryDetailComponent,\r\n          data: {\r\n            title: \"Create Category\",\r\n            breadcrumb: \"Create Category\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CategoriesRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModal, NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { ListCategoriesComponent } from './list-categories/list-categories.component';\r\nimport { CategoryDetailComponent } from './categories-details/categories-details.component';\r\nimport { CategoriesRoutingModule } from './categories-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [ListCategoriesComponent, CategoryDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CategoriesRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    SharedModule,\r\n    NgbModalModule,\r\n    Ng2SmartTableModule\r\n  ]\r\n})\r\nexport class CategoriesModule { }\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"card\">\r\n      <div class=\"card-header\">\r\n          <h5>Category Details</h5>\r\n      </div>\r\n      <div class=\"card-body vendor-table\">\r\n          <div id=\"batchDelete\" class=\"custom-datatable media-datatable\">\r\n              <div class=\"table-responsive\">\r\n                      <ng2-smart-table  [settings]=\"settings\" (edit)=\"openPopup($event)\" (create)=\"openPopup(null)\" (delete)=\"delete($event)\" [(source)]=\"categories\"></ng2-smart-table>\r\n              </div>\r\n          </div>\r\n          <app-paging-server-view *ngIf=\"data?.totalPage > 1\"\r\n            [data]=\"data\"\r\n            (page)=\"onPage($event)\"\r\n          ></app-paging-server-view>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <button (click)=\"openCreate()\">Add</button> -->\r\n<!-- Container-fluid Ends-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  PageModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n} from 'src/app/lib/data/models';\r\nimport { CategoryModel } from 'src/app/lib/data/models/categories/category.model';\r\nimport { FileService } from 'src/app/lib/data/services';\r\nimport { CategoryService } from 'src/app/lib/data/services/categories/category.service';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { CustomViewCellStringComponent } from 'src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component';\r\nimport { ViewImageCellComponent } from 'src/app/shared/components/viewimagecell/viewimagecell.component';\r\nimport { CategoryDetailComponent } from '../categories-details/categories-details.component';\r\n\r\n@Component({\r\n  selector: 'app-list-categories',\r\n  templateUrl: './list-categories.component.html',\r\n  styleUrls: ['./list-categories.component.scss'],\r\n  providers: [CategoryService, FileService],\r\n})\r\nexport class ListCategoriesComponent implements OnInit {\r\n  public categories: CategoryModel[];\r\n  closeResult = '';\r\n  public data: PageModel<CategoryModel>;\r\n  params: any = {};\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private categoryService: CategoryService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.fetch();\r\n  }\r\n\r\n  public settings = {\r\n    mode: 'external',\r\n    actions: {\r\n      position: 'right',\r\n    },\r\n    columns: {\r\n      // imageUrl: {\r\n      //   title: 'Image',\r\n      //   type: 'custom',\r\n      //   renderComponent: ViewImageCellComponent,\r\n      // },\r\n      name: {\r\n        title: 'Name',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      description: {\r\n        title: 'Description',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n    },\r\n  };\r\n\r\n  delete(event: any) {\r\n    this.messageService\r\n      .confirm(`Do you want to delete the category?`, 'Yes')\r\n      .then((res) => {\r\n        if (res.isConfirmed) {\r\n          let category = event.data as CategoryModel;\r\n          this.categoryService\r\n            .delete(category)\r\n            .then(() => {\r\n              this.messageService.notification(\r\n                'Category has been deleted',\r\n                TypeSweetAlertIcon.SUCCESS\r\n              );\r\n              this.fetch();\r\n            })\r\n            .catch((er) => {\r\n              this.messageService.alert(\r\n                er.error.message ??\r\n                  JSON.stringify(er.error.error) ??\r\n                  'Server Disconnected',\r\n                TypeSweetAlertIcon.ERROR\r\n              );\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  openPopup(item: any) {\r\n    var modalRef = this.modalService.open(CategoryDetailComponent, {\r\n      size: 'xl',\r\n    });\r\n    modalRef.componentInstance.item = item?.data;\r\n    return modalRef.result.then(\r\n      () => {\r\n        this.fetch();\r\n      },\r\n      (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      }\r\n    );\r\n  }\r\n\r\n  fetch() {\r\n    this.categoryService\r\n      .get({ params: this.params })\r\n      .then((res: ReturnMessage<PageModel<CategoryModel>>) => {\r\n        if (!res.hasError) {\r\n          this.categories = res.data.results;\r\n          this.data = res.data;\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n        // if (er.error.hasError) {\r\n        //   // console.log(er.error.message)\r\n        // }\r\n      });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onPage(event) {\r\n    this.params.pageIndex = event;\r\n    this.fetch();\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-custom-view-cell-string',\r\n  templateUrl: './custom-view-cell-string.component.html',\r\n  styleUrls: ['./custom-view-cell-string.component.scss']\r\n})\r\n\r\nexport class CustomViewCellStringComponent implements OnInit {\r\n  \r\n  @Input() value: any;    // This hold the cell value\r\n  @Input() rowData: any;  // This holds the entire row object\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"text-left\">{{ value }}</div>"]}