{"version":3,"file":"src_app_components_users_users_module_ts-es2015.js","mappings":"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","sources":["./src/app/components/users/list-users/list-users.component.ts","./src/app/components/users/list-users/list-users.component.html","./src/app/components/users/users-details/users-details.component.ts","./src/app/components/users/users-details/users-details.component.html","./src/app/components/users/users-routing.module.ts","./src/app/components/users/users.module.ts","./src/app/lib/data/services/users/user.service.ts","./src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.ts","./src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n  PageModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n  UserDataReturnDTOModel,\r\n} from 'src/app/lib/data/models';\r\nimport { CategoryModel } from 'src/app/lib/data/models/categories/category.model';\r\nimport { UserModel } from 'src/app/lib/data/models/users/user.model';\r\nimport { AuthService, FileService } from 'src/app/lib/data/services';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { CustomViewCellStringComponent } from 'src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component';\r\nimport { ViewImageCellComponent } from 'src/app/shared/components/viewimagecell/viewimagecell.component';\r\nimport { UserDetailComponent } from '../users-details/users-details.component';\r\nimport { UserService } from './../../../lib/data/services/users/user.service';\r\n\r\n@Component({\r\n  selector: 'app-list-users',\r\n  templateUrl: './list-users.component.html',\r\n  styleUrls: ['./list-users.component.scss'],\r\n  providers: [UserService],\r\n})\r\nexport class ListUsersComponent implements OnInit, OnDestroy {\r\n  public users: UserModel[];\r\n  closeResult = '';\r\n  public data: PageModel<UserModel>;\r\n  params: any = {};\r\n  userInfo: UserDataReturnDTOModel;\r\n  subUser: Subscription;\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private userService: UserService,\r\n    private messageService: MessageService,\r\n    private authService: AuthService\r\n  ) {\r\n    this.getList();\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subUser.unsubscribe();\r\n    this.subUser = null;\r\n  }\r\n  ngOnInit(): void {\r\n    this.subUser = this.authService.callUserInfo.subscribe(\r\n      (res) => (this.userInfo = res)\r\n    );\r\n  }\r\n\r\n  public settings = {\r\n    mode: 'external',\r\n    pager: {\r\n      display: true,\r\n      perPage: 10,\r\n    },\r\n    actions: {\r\n      position: 'right',\r\n    },\r\n    columns: {\r\n      imageUrl: {\r\n        filter: false,\r\n        title: 'Image',\r\n        type: 'custom',\r\n        renderComponent: ViewImageCellComponent,\r\n      },\r\n      username: {\r\n        title: 'Username',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      email: {\r\n        title: 'Email',\r\n      },\r\n      firstName: {\r\n        title: 'First Name',\r\n      },\r\n      lastName: {\r\n        title: 'Last Name',\r\n      },\r\n    },\r\n  };\r\n\r\n  delete(event: any) {\r\n    if (\r\n      event.data.id == '10000000-0000-0000-0000-000000000000' ||\r\n      event.data.id == this.userInfo.id\r\n    ) {\r\n      this.messageService.alert(\r\n        'Your access permissions may be inadequate to perform the requested operation on this resource.',\r\n        TypeSweetAlertIcon.INFO\r\n      );\r\n      return;\r\n    }\r\n    this.messageService\r\n      .confirm(`Do you want to delete the user?`, 'Yes')\r\n      .then((res) => {\r\n        if (res.isConfirmed) {\r\n          let user = event.data as UserModel;\r\n          this.userService\r\n            .delete(user)\r\n            .then(() => {\r\n              this.messageService.notification(\r\n                'User has been deleted',\r\n                TypeSweetAlertIcon.SUCCESS\r\n              );\r\n              this.getList();\r\n            })\r\n            .catch((er) => {\r\n              this.messageService.alert(\r\n                er.error.message ??\r\n                  JSON.stringify(er.error.error) ??\r\n                  'Server Disconnected',\r\n                TypeSweetAlertIcon.ERROR\r\n              );\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  openPopup(item: any) {\r\n    if (\r\n      '10000000-0000-0000-0000-000000000000' != this.userInfo.id &&\r\n      item?.data.id == '10000000-0000-0000-0000-000000000000'\r\n    ) {\r\n      this.messageService.alert(\r\n        'Your access permissions may be inadequate to perform the requested operation on this resource.',\r\n        TypeSweetAlertIcon.INFO\r\n      );\r\n      return;\r\n    }\r\n    var modalRef = this.modalService.open(UserDetailComponent, {\r\n      size: 'lg',\r\n    });\r\n    if (item) modalRef.componentInstance.item = item.data;\r\n\r\n    modalRef.result.then(\r\n      (close) => {\r\n        this.getList();\r\n      },\r\n      (dismiss) => {}\r\n    );\r\n  }\r\n\r\n  getList() {\r\n    this.userService\r\n      .get({ params: this.params })\r\n      .then((res: ReturnMessage<PageModel<UserModel>>) => {\r\n        if (!res.hasError) {\r\n          this.users = res.data.results;\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        if (er.error.hasError) {\r\n          // console.log(er.error.message);\r\n        }\r\n      });\r\n  }\r\n  onPage(event) {\r\n    this.params.pageIndex = event;\r\n    this.getList();\r\n  }\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h5>Admin Details</h5>\r\n    </div>\r\n    <div class=\"card-body vendor-table\">\r\n      <div class=\"custom-datatable media-datatable\">\r\n        <div class=\"table-responsive\">\r\n          <ng2-smart-table\r\n            [settings]=\"settings\"\r\n            (edit)=\"openPopup($event)\"\r\n            (create)=\"openPopup(null)\"\r\n            (delete)=\"delete($event)\"\r\n            [(source)]=\"users\"\r\n          ></ng2-smart-table>\r\n        </div>\r\n      </div>\r\n      <app-paging-server-view *ngIf=\"data?.totalPage > 1\"\r\n        [data]=\"data\"\r\n        (page)=\"onPage($event)\"\r\n      ></app-paging-server-view>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <button (click)=\"openCreate()\">Add</button> -->\r\n<!-- Container-fluid Ends-->\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { VirtualTimeScheduler } from 'rxjs';\r\nimport {\r\n  FileDtoModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n} from 'src/app/lib/data/models';\r\nimport { UserModel } from 'src/app/lib/data/models/users/user.model';\r\nimport { FileService } from 'src/app/lib/data/services';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { UserService } from 'src/app/lib/data/services/users/user.service';\r\n\r\nimport {\r\n  EntityType,\r\n  ModalFile,\r\n  ModalFooterModel,\r\n  ModalHeaderModel,\r\n  TypeFile,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\n@Component({\r\n  selector: 'app-users-details',\r\n  templateUrl: './users-details.component.html',\r\n  styleUrls: ['./users-details.component.scss'],\r\n  providers: [UserService],\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n  public usersForm: FormGroup;\r\n  public permissionForm: FormGroup;\r\n  public modalHeader: ModalHeaderModel;\r\n  public modalFooter: ModalFooterModel;\r\n  public user: UserModel;\r\n  messageFail: string;\r\n  @Input() item: UserModel;\r\n\r\n  public modalFile: ModalFile;\r\n  public fileURL: (String | ArrayBuffer)[];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private userService: UserService,\r\n    private ngbActiveModal: NgbActiveModal,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.modalFile = new ModalFile();\r\n    this.modalFile.typeFile = TypeFile.IMAGE;\r\n    this.modalFile.multiBoolen = false;\r\n    this.modalFile.enityType = EntityType.USER;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadItem();\r\n    if (this.item) {\r\n      this.fileURL = [];\r\n      this.fileURL.push(this.item.imageUrl);\r\n    }\r\n  }\r\n\r\n  loadItem() {\r\n    this.usersForm = this.formBuilder.group({\r\n      username: [this.item ? this.item.username : '', [Validators.required]],\r\n      password: [this.item ? this.item.password : '', [Validators.required]],\r\n      email: [this.item ? this.item.email : '', [Validators.email]],\r\n      firstName: [this.item ? this.item.firstName : ''],\r\n      lastName: [this.item ? this.item.lastName : ''],\r\n      imageUrl: [this.item ? this.item.imageUrl : ''],\r\n    });\r\n\r\n    this.modalHeader = new ModalHeaderModel();\r\n    this.modalHeader.title = this.item ? `Update ${this.item.username}` : `Add`;\r\n    this.modalFooter = new ModalFooterModel();\r\n    this.modalFooter.title = 'Save';\r\n  }\r\n\r\n\r\n  save() {\r\n    this.messageFail = '';\r\n\r\n    if (this.usersForm.invalid) {\r\n      // console.log(this.usersForm);\r\n      return;\r\n    }\r\n\r\n    this.user = {\r\n      username: this.usersForm.value.username,\r\n      password: this.usersForm.value.password,\r\n      email: this.usersForm.value.email,\r\n      firstName: this.usersForm.value.firstName,\r\n      lastName: this.usersForm.value.lastName,\r\n      imageUrl: this.usersForm.value.imageUrl,\r\n      id: this.item ? this.item.id : '',\r\n      files: this.modalFile.listFile,\r\n    };\r\n\r\n    this.callServiceToSave();\r\n  }\r\n\r\n  callServiceToSave() {\r\n    this.userService\r\n      .save(this.user)\r\n      .then((data: ReturnMessage<UserModel>) => {\r\n        this.messageService.notification(\r\n          this.item? 'Admin profile has been edited':'Admin profile has been created',\r\n          TypeSweetAlertIcon.SUCCESS\r\n        );\r\n        this.ngbActiveModal.close();\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n            TypeSweetAlertIcon.ERROR\r\n        );\r\n        if (er.error.message) this.messageFail = er.error.message;\r\n        // console.log(e);\r\n      });\r\n  }\r\n\r\n  close(event: any) {\r\n    this.ngbActiveModal.dismiss();\r\n  }\r\n\r\n  onChangeData(event: { add: string[]; remove: string; removeAll: boolean }) {\r\n    if (event == null) {\r\n      return;\r\n    }\r\n\r\n    if (!this.fileURL) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    if (event.add) {\r\n      this.fileURL = [...this.fileURL, ...event.add];\r\n    }\r\n\r\n    if (event.remove) {\r\n      this.fileURL.forEach((e: string, i) => {\r\n        if (e.includes(event.remove)) {\r\n          this.fileURL.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (event.removeAll) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    this.usersForm.controls.imageUrl.setValue(this.fileURL.join(','));\r\n  }\r\n}\r\n","<app-modal-header\r\n  [data]=\"modalHeader\"\r\n  (onAction)=\"close($event)\"\r\n></app-modal-header>\r\n<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"card tab2-card\">\r\n        <div class=\"card-body\">\r\n          <div\r\n            class=\"tab-pane fade active show\"\r\n            id=\"account\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"account-tab\"\r\n          >\r\n            <form\r\n              [formGroup]=\"usersForm\"\r\n              class=\"needs-validation user-add\"\r\n              novalidate=\"\"\r\n            >\r\n              <h4>Admin Details</h4>\r\n              <p class=\"text-danger\" *ngIf=\"messageFail\">\r\n                {{ messageFail }}\r\n              </p>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Username</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"username\"\r\n                  autocomplete=\"new-password\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\" *ngIf=\"!item\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Password</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"password\"\r\n                  formControlName=\"password\"\r\n                  autocomplete=\"new-password\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  Email</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid':\r\n                      usersForm.controls.email.dirty &&\r\n                      usersForm.controls.email.errors?.email\r\n                  }\"\r\n                />\r\n                <div\r\n                  *ngIf=\"usersForm.controls.email.errors?.email\"\r\n                  class=\"invalid-feedback col-md-5 offset-md-3\"\r\n                >\r\n                  <div>Wrong email type</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  FirstName</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"firstName\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  LastName</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"lastName\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\">\r\n                  Image</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n                  hidden\r\n                />\r\n\r\n                <div class=\"col-xl-8 col-md-7 p-0\">\r\n                  <app-upload-file\r\n                    [data]=\"modalFile\"\r\n                    [fileURL]=\"fileURL\"\r\n                    styleFile=\"width: 100%; height: auto;\"\r\n                    (onChange)=\"onChangeData($event)\"\r\n                  ></app-upload-file>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n<app-modal-footer [data]=\"modalFooter\" (onAction)=\"save()\"></app-modal-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListUsersComponent } from './list-users/list-users.component';\r\nimport { UserDetailComponent } from './users-details/users-details.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'list-users',\r\n        component: ListUsersComponent,\r\n        data: {\r\n          title: 'Admin List',\r\n          breadcrumb: 'Admin List',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UsersRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ListUsersComponent } from './list-users/list-users.component';\r\nimport { UserDetailComponent } from './users-details/users-details.component';\r\nimport { UsersRoutingModule } from './users-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [ListUsersComponent, UserDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    SharedModule,\r\n    NgbModalModule,\r\n    Ng2SmartTableModule,\r\n  ],\r\n})\r\nexport class UsersModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClientService } from 'src/app/lib/http/http-client';\r\nimport { UserModel } from '../../models/users/user.model';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  private url = '/api/user';\r\n\r\n  constructor(private httpClient: HttpClientService) { }\r\n\r\n  get(request: any) {\r\n    return this.httpClient.getObservable(this.url, request).toPromise();\r\n  }\r\n\r\n  create(model: UserModel) {\r\n    return this.httpClient.postObservable(this.url, model).toPromise();\r\n  }\r\n\r\n  update(model: UserModel) {\r\n    return this.httpClient.putObservable(this.url, model).toPromise();\r\n  }\r\n\r\n  delete(model: UserModel) {\r\n    const url = `${this.url}/?id=${model?.id}`;\r\n    return this.httpClient.deleteObservable(url).toPromise();\r\n  }\r\n\r\n  save(model) {\r\n    if (model.id) {\r\n      return this.update(model);\r\n    }\r\n    return this.create(model);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-custom-view-cell-string',\r\n  templateUrl: './custom-view-cell-string.component.html',\r\n  styleUrls: ['./custom-view-cell-string.component.scss']\r\n})\r\n\r\nexport class CustomViewCellStringComponent implements OnInit {\r\n  \r\n  @Input() value: any;    // This hold the cell value\r\n  @Input() rowData: any;  // This holds the entire row object\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"text-left\">{{ value }}</div>"],"names":[],"sourceRoot":"webpack:///"}