{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_7__","BannersDetailComponent","formBuilder","ngbActiveModal","bannersService","messageService","modalFile","src_app_shared_components_modals_models_modal_model__WEBPACK_IMPORTED_MODULE_1__","typeFile","multiBoolen","enityType","loadFormItem","createModal","item","fileURL","imageUrl","split","forEach","it","push","bannersForm","group","title","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","description","link","displayOrder","modalHeader","modalFooter","controls","event","banner","value","id","files","listFile","submitted","valid","save","then","res","notification","src_app_lib_data_models__WEBPACK_IMPORTED_MODULE_0__","reset","close","er","alert","error","message","_a","JSON","stringify","_b","dismiss","add","remove","e","i","includes","splice","removeAll","setValue","join","console","log","selectors","features","decls","vars","consts","template","ctx","routes","path","children","component","_list_banners_list_banners_component__WEBPACK_IMPORTED_MODULE_0__","data","breadcrumb","BannersRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","BannersModule","src_app_lib_data_services__WEBPACK_IMPORTED_MODULE_3__","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__","ng2_smart_table__WEBPACK_IMPORTED_MODULE_9__","_banners_routing_module__WEBPACK_IMPORTED_MODULE_1__","src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_2__","declarations","_banners_detail_banners_detail_component__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_8__","ListBannersComponent","modalService","mode","actions","position","columns","filter","type","renderComponent","src_app_shared_components_viewimagecell_viewimagecell_component__WEBPACK_IMPORTED_MODULE_3__","src_app_shared_components_custom_view_cell_string_custom_view_cell_string_component__WEBPACK_IMPORTED_MODULE_1__","valuePrepareFunction","src_app_shared_components_customViewCell_customViewCell_component__WEBPACK_IMPORTED_MODULE_2__","getBanners","get","params","hasError","banners","results","modalRef","open","size","componentInstance","result","confirm","isConfirmed","pageIndex","CustomViewCellStringComponent","inputs","rowData","_angular_core__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/components/banners/banners-detail/banners-detail.component.html","webpack:///src/app/components/banners/banners-detail/banners-detail.component.ts","webpack:///src/app/components/banners/banners-routing.module.ts","webpack:///src/app/components/banners/banners.module.ts","webpack:///src/app/components/banners/list-banners/list-banners.component.html","webpack:///src/app/components/banners/list-banners/list-banners.component.ts","webpack:///src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.ts","webpack:///src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.html"],"sourcesContent":["<app-modal-header\r\n  [data]=\"modalHeader\"\r\n  (onAction)=\"close($event)\"\r\n></app-modal-header>\r\n<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"card tab2-card\">\r\n        <div class=\"card-body\">\r\n          <div\r\n            class=\"tab-pane fade active show\"\r\n            id=\"account\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"account-tab\"\r\n          >\r\n            <form\r\n              [formGroup]=\"bannersForm\"\r\n              class=\"needs-validation user-add\"\r\n              novalidate=\"\"\r\n            >\r\n              <h4>Banner Details</h4>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Title</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom0\"\r\n                  type=\"text\"\r\n                  required\r\n                  formControlName=\"title\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid ':\r\n                      (bannersFormControl.title.touched || submitted) &&\r\n                      bannersFormControl.title.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (bannersFormControl.title.touched || submitted) &&\r\n                      bannersFormControl.title.errors?.required\r\n                    \"\r\n                  >\r\n                    Title is required\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>&nbsp;</span> Description</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"\"\r\n                  type=\"text\"\r\n                  formControlName=\"description\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>&nbsp;</span> Link</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom1\"\r\n                  type=\"text\"\r\n                  formControlName=\"link\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Image</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom2\"\r\n                  type=\"text\"\r\n                  formControlName=\"imageUrl\"\r\n                  hidden\r\n                  [ngClass]=\"{\r\n                    'is-invalid ':\r\n                      (bannersFormControl.imageUrl.touched || submitted) &&\r\n                      bannersFormControl.imageUrl.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"col-xl-8 col-md-7 p-0\">\r\n                  <app-upload-file\r\n                    [data]=\"modalFile\"\r\n                    [fileURL]=\"fileURL\"\r\n                    [isBannerUpload]=\"true\"\r\n                    styleFile=\"width: 100%; height: auto;\"\r\n                    (onChange)=\"onChangeData($event)\"\r\n                  ></app-upload-file>\r\n                </div>\r\n\r\n                <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (bannersFormControl.imageUrl.touched || submitted) &&\r\n                      bannersFormControl.imageUrl.errors?.required\r\n                    \"\r\n                  >\r\n                    Image is required\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom3\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Display Order</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom3\"\r\n                  type=\"number\"\r\n                  required=\"\"\r\n                  formControlName=\"displayOrder\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid ':\r\n                      (bannersFormControl.displayOrder.touched || submitted) &&\r\n                      bannersFormControl.displayOrder.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"invalid-feedback col-md-5 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (bannersFormControl.displayOrder.touched || submitted) &&\r\n                      bannersFormControl.displayOrder.errors?.required\r\n                    \"\r\n                  >\r\n                    Display Order is required\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n<app-modal-footer\r\n  [data]=\"modalFooter\"\r\n  (onAction)=\"saveBanner($event)\"\r\n></app-modal-footer>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FileDtoModel, TypeSweetAlertIcon } from 'src/app/lib/data/models';\r\nimport { BannerModel } from 'src/app/lib/data/models/banners/banner.model';\r\nimport { FileService } from 'src/app/lib/data/services';\r\nimport { BannersService } from 'src/app/lib/data/services/banners/banners.service';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport {\r\n  EntityType,\r\n  ModalFile,\r\n  ModalFooterModel,\r\n  ModalHeaderModel,\r\n  TypeFile,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\n\r\n@Component({\r\n  selector: 'app-banners-detail',\r\n  templateUrl: './banners-detail.component.html',\r\n  styleUrls: ['./banners-detail.component.scss'],\r\n  providers: [],\r\n})\r\nexport class BannersDetailComponent implements OnInit {\r\n  public bannersForm: FormGroup;\r\n  public item: any;\r\n  public banner: BannerModel;\r\n  public modalHeader: ModalHeaderModel;\r\n  public modalFooter: ModalFooterModel;\r\n  submitted = false;\r\n\r\n  public modalFile: ModalFile;\r\n  public fileURL: (string | ArrayBuffer)[];\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ngbActiveModal: NgbActiveModal,\r\n    private bannersService: BannersService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.modalFile = new ModalFile();\r\n    this.modalFile.typeFile = TypeFile.IMAGE;\r\n    this.modalFile.multiBoolen = false;\r\n    this.modalFile.enityType = EntityType.BANNER;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadFormItem();\r\n    this.createModal();\r\n    if (this.item) {\r\n      this.fileURL = [];\r\n      this.item.imageUrl.split(',').forEach((it) => {\r\n        this.fileURL.push(it);\r\n      });\r\n    }\r\n  }\r\n  loadFormItem() {\r\n    this.bannersForm = this.formBuilder.group({\r\n      title: [this.item ? this.item.title : '', Validators.required],\r\n      description: [this.item ? this.item.description : ''],\r\n      link: [this.item ? this.item.link : ''],\r\n      imageUrl: [this.item ? this.item.imageUrl : '', Validators.required],\r\n      displayOrder: [\r\n        this.item ? this.item.displayOrder : '',\r\n        Validators.required,\r\n      ],\r\n    });\r\n  }\r\n\r\n  createModal() {\r\n    this.modalHeader = new ModalHeaderModel();\r\n    this.modalHeader.title =\r\n      this.item != null ? `Update ${this.item.title}` : `Add Banner`;\r\n    this.modalFooter = new ModalFooterModel();\r\n    this.modalFooter.title = 'Save';\r\n  }\r\n\r\n  get bannersFormControl() {\r\n    return this.bannersForm.controls;\r\n  }\r\n\r\n  saveBanner(event: any) {\r\n    this.banner = {\r\n      title: this.bannersForm.controls.title.value,\r\n      description: this.bannersForm.controls.description.value,\r\n      link: this.bannersForm.controls.link.value,\r\n      imageUrl: this.bannersForm.controls.imageUrl.value,\r\n      displayOrder: this.bannersForm.controls.displayOrder.value,\r\n      id: this.item ? this.item.id : '',\r\n      files: this.modalFile.listFile,\r\n    };\r\n\r\n    this.submitted = true;\r\n\r\n    if (this.bannersForm.valid) {\r\n\r\n      this.bannersService\r\n        .save(this.banner)\r\n        .then((res) => {\r\n          this.messageService.notification(\r\n           this.item? 'Banner has been edited':'Banner has been created',\r\n            TypeSweetAlertIcon.SUCCESS\r\n          )\r\n          this.bannersForm.reset();\r\n          this.submitted = false;\r\n          this.ngbActiveModal.close();\r\n        })\r\n        .catch((er) => {\r\n          this.messageService.alert(\r\n            er.error.message ?? JSON.stringify(er.error.error) ?? \"Server Disconnected\",\r\n            TypeSweetAlertIcon.ERROR\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  close(event: any) {\r\n    this.ngbActiveModal.dismiss();\r\n  }\r\n\r\n  onChangeData(event: { add: string[]; remove: string; removeAll: boolean }) {\r\n    if (event == null) {\r\n      return;\r\n    }\r\n\r\n    if (!this.fileURL) {\r\n      this.fileURL = [];\r\n    }\r\n    if (event.add) {\r\n      this.fileURL = [...this.fileURL, ...event.add];\r\n    }\r\n    if (event.remove) {\r\n      this.fileURL.forEach((e: string, i) => {\r\n        if (e.includes(event.remove)) {\r\n          this.fileURL.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (event.removeAll) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    this.bannersForm.controls.imageUrl.setValue(this.fileURL.join(','));\r\n    console.log(this.fileURL);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListBannersComponent } from './list-banners/list-banners.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'list-banners',\r\n        component: ListBannersComponent,\r\n        data: {\r\n          title: \"Banner List\",\r\n          breadcrumb: \"Banner List\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class BannersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ListBannersComponent } from './list-banners/list-banners.component';\r\nimport { BannersRoutingModule } from './banners-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { BannersService } from 'src/app/lib/data/services';\r\nimport { BannersDetailComponent } from './banners-detail/banners-detail.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    Ng2SmartTableModule,\r\n    BannersRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [ListBannersComponent, BannersDetailComponent],\r\n  providers: [BannersService],\r\n})\r\nexport class BannersModule {}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h5>Banner Details</h5>\r\n    </div>\r\n    <div class=\"card-body vendor-table\">\r\n      <div id=\"batchDelete\" class=\"custom-datatable media-datatable\">\r\n        <div class=\"table-responsive\">\r\n          <ng2-smart-table\r\n            [settings]=\"settings\"\r\n            [(source)]=\"banners\"\r\n            (create)=\"openDetails($event)\"\r\n            (delete)=\"delete($event)\"\r\n            (edit)=\"openDetails($event)\"\r\n          >\r\n          </ng2-smart-table>\r\n        </div>\r\n      </div>\r\n\r\n      <app-paging-server-view *ngIf=\"data?.totalPage > 1\"\r\n        [data]=\"data\"\r\n        (page)=\"onPage($event)\"\r\n      ></app-paging-server-view>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Container-fluid Ends-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  PageModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n} from 'src/app/lib/data/models';\r\nimport { BannerModel } from 'src/app/lib/data/models/banners/banner.model';\r\n\r\nimport { BannersService } from 'src/app/lib/data/services/banners/banners.service';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { CustomViewCellStringComponent } from 'src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component';\r\nimport { CustomViewCellComponent } from 'src/app/shared/components/customViewCell/customViewCell.component';\r\nimport { ViewImageCellComponent } from 'src/app/shared/components/viewimagecell/viewimagecell.component';\r\n\r\nimport { BannersDetailComponent } from '../banners-detail/banners-detail.component';\r\n\r\n@Component({\r\n  selector: 'app-list-banners',\r\n  templateUrl: './list-banners.component.html',\r\n  styleUrls: ['./list-banners.component.scss'],\r\n  providers: [],\r\n})\r\nexport class ListBannersComponent implements OnInit {\r\n  public banners: BannerModel[];\r\n  public data: PageModel<BannerModel>;\r\n  params: any = {};\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private bannersService: BannersService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.getBanners();\r\n  }\r\n  ngOnInit() {}\r\n  public settings = {\r\n    mode: 'external',\r\n    actions: {\r\n      position: 'right',\r\n    },\r\n    columns: {\r\n      imageUrl: {\r\n        filter: false,\r\n        title: 'Image',\r\n        type: 'custom',\r\n        renderComponent: ViewImageCellComponent,\r\n      },\r\n      title: {\r\n        title: 'Title',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      description: {\r\n        title: 'Description',\r\n      },\r\n      link:{\r\n        title: 'Link',\r\n        type: 'html',\r\n        valuePrepareFunction: (value) => {\r\n          return `<a href='${value}' target=\"_blank\">${value}</a>`\r\n        },\r\n      },\r\n      displayOrder: {\r\n        title: 'Display Order',\r\n        value: 'displayOrder',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellComponent,\r\n      },\r\n    },\r\n  };\r\n\r\n  getBanners() {\r\n    this.bannersService\r\n      .get({params: this.params})\r\n      .then((res: ReturnMessage<PageModel<BannerModel>>) => {\r\n        if (!res.hasError) {\r\n          this.banners = res.data.results;\r\n          this.data = res.data;\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n      });\r\n  }\r\n\r\n  openDetails(event: any) {\r\n    var modalRef = this.modalService.open(BannersDetailComponent, {\r\n      size: 'lg',\r\n    });\r\n    modalRef.componentInstance.item = event?.data;\r\n    modalRef.result.then(\r\n      (close) => this.getBanners(),\r\n      (dismiss) => {}\r\n    );\r\n  }\r\n\r\n  delete(event: any) {\r\n    this.messageService\r\n      .confirm(`Do you want to delete the banner?`, 'Yes')\r\n      .then((res) => {\r\n        if (res.isConfirmed) {\r\n          let banner = event.data as BannerModel;\r\n          this.bannersService\r\n            .delete(banner)\r\n            .then(() => {\r\n              this.messageService.notification(\r\n                'Banner has been deleted',\r\n                TypeSweetAlertIcon.SUCCESS\r\n              );\r\n              this.getBanners();\r\n            })\r\n            .catch((er) => {\r\n              this.messageService.alert(\r\n                er.error.message ??\r\n                  JSON.stringify(er.error.error) ??\r\n                  'Server Disconnected',\r\n                TypeSweetAlertIcon.ERROR\r\n              );\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  onPage(event) {\r\n    this.params.pageIndex = event;\r\n    this.getBanners();\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-custom-view-cell-string',\r\n  templateUrl: './custom-view-cell-string.component.html',\r\n  styleUrls: ['./custom-view-cell-string.component.scss']\r\n})\r\n\r\nexport class CustomViewCellStringComponent implements OnInit {\r\n  \r\n  @Input() value: any;    // This hold the cell value\r\n  @Input() rowData: any;  // This holds the entire row object\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"text-left\">{{ value }}</div>"]}