{"version":3,"mappings":"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","names":["ContactDetailComponent","formBuilder","pageContentService","ngbActiveModal","src_app_lib_customCkeditor_ckeditor5_build_classic__WEBPACK_IMPORTED_MODULE_0__","extraPlugins","src_app_lib_ckeditor_Base64Upload__WEBPACK_IMPORTED_MODULE_1__","editor","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","loadItem","createModal","modalHeader","src_app_shared_components_modals_models_modal_model__WEBPACK_IMPORTED_MODULE_2__","title","modalFooter","buttons","color","onAction","event","dismiss","item","status","progress","complete","pageContentForm","group","firstName","lastName","email","phoneNumber","message","contact","id","value","save","then","close","er","error","hasError","invalid","loadModel","callServiceToSave","_angular_core__WEBPACK_IMPORTED_MODULE_6__","selectors","inputs","features","src_app_lib_data_services_contacts_contact_service__WEBPACK_IMPORTED_MODULE_3__","decls","vars","consts","template","ctx","routes","path","children","component","_list_contact_list_contact_component__WEBPACK_IMPORTED_MODULE_0__","data","breadcrumb","ContactRouting","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","ContactModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_contact_routing_module__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__","src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_0__","ng2_smart_table__WEBPACK_IMPORTED_MODULE_8__","_ckeditor_ckeditor5_angular__WEBPACK_IMPORTED_MODULE_9__","declarations","_list_contact_list_contact_component__WEBPACK_IMPORTED_MODULE_3__","_contact_details_contact_details_component__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_7__","ListContactComponent","modalService","contactService","messageService","datePipe","mode","pager","display","perPage","actions","position","add","columns","type","renderComponent","src_app_shared_components_custom_view_cell_string_custom_view_cell_string_component__WEBPACK_IMPORTED_MODULE_2__","src_app_shared_components_customViewCell_customViewCell_component__WEBPACK_IMPORTED_MODULE_3__","createByDate","valuePrepareFunction","date","transform","Date","getList","modalRef","open","_contact_details_contact_details_component__WEBPACK_IMPORTED_MODULE_4__","size","componentInstance","result","confirm","res","isConfirmed","notification","src_app_lib_data_models__WEBPACK_IMPORTED_MODULE_0__","contacts","params","pageIndex","src_app_lib_data_services_contacts_contact_service__WEBPACK_IMPORTED_MODULE_1__","_angular_common__WEBPACK_IMPORTED_MODULE_9__","ContactService","httpClient","request","getObservable","url","toPromise","model","postObservable","putObservable","deleteObservable","update","create","_angular_core__WEBPACK_IMPORTED_MODULE_1__","factory"],"sources":["webpack:///src/app/components/contacts/contact-details/contact-details.component.ts","webpack:///src/app/components/contacts/contact-details/contact-details.component.html","webpack:///src/app/components/contacts/contact-routing.module.ts","webpack:///src/app/components/contacts/contact.module.ts","webpack:///src/app/components/contacts/list-contact/list-contact.component.html","webpack:///src/app/components/contacts/list-contact/list-contact.component.ts","webpack:///src/app/lib/data/services/contacts/contact.service.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as ClassicEditor from 'src/app/lib/customCkeditor/ckeditor5-build-classic';\r\nimport Base64UploaderPlugin from 'src/app/lib/@ckeditor/Base64Upload';\r\nimport {\r\n  ModalFooterModel,\r\n  ModalHeaderModel,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\nimport { ContactModel } from 'src/app/lib/data/models/contact/contact.model';\r\nimport { ContactService } from 'src/app/lib/data/services/contacts/contact.service';\r\n@Component({\r\n  selector: 'app-contact-details',\r\n  templateUrl: './contact-details.component.html',\r\n  styleUrls: ['./contact-details.component.scss'],\r\n  providers: [ContactService],\r\n})\r\nexport class ContactDetailComponent implements OnInit {\r\n  public pageContentForm: FormGroup;\r\n  public modalHeader: ModalHeaderModel;\r\n  public modalFooter: ModalFooterModel;\r\n  public contact: ContactModel;\r\n  @Input() item;\r\n\r\n  public editor = ClassicEditor;\r\n  public editorConfig = {\r\n    extraPlugins: [Base64UploaderPlugin],\r\n  };\r\n  public onReady(editor) {\r\n    editor.ui\r\n      .getEditableElement()\r\n      .parentElement.insertBefore(\r\n        editor.ui.view.toolbar.element,\r\n        editor.ui.getEditableElement()\r\n      );\r\n  }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pageContentService: ContactService,\r\n    private ngbActiveModal: NgbActiveModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadItem();\r\n    this.createModal();\r\n  }\r\n\r\n  createModal() {\r\n    this.modalHeader = new ModalHeaderModel();\r\n    this.modalHeader.title = `Update Contact`;\r\n    this.modalFooter = new ModalFooterModel();\r\n    this.modalFooter.buttons = [\r\n      {\r\n        color: 'btn btn-primary',\r\n        title: 'close',\r\n        onAction: (event: any) => {\r\n          this.ngbActiveModal.dismiss();\r\n        },\r\n      },\r\n    ];\r\n    if (this.item.status == 'Pending') {\r\n      this.modalFooter.buttons = [\r\n        {\r\n          color: 'btn btn-success',\r\n          title: 'Progress',\r\n          onAction: (event: any) => {\r\n            this.progress();\r\n          },\r\n        },\r\n        {\r\n          color: 'btn btn-primary',\r\n          title: 'Complete',\r\n          onAction: (event: any) => {\r\n            this.complete();\r\n          },\r\n        },\r\n      ];\r\n    }\r\n    if (this.item.status == 'In Progress') {\r\n      this.modalFooter.buttons = [\r\n        {\r\n          color: 'btn btn-primary',\r\n          title: 'Complete',\r\n          onAction: (event: any) => {\r\n            this.complete();\r\n          },\r\n        },\r\n      ];\r\n    }\r\n  }\r\n\r\n\r\n  loadItem() {\r\n    this.pageContentForm = this.formBuilder.group({\r\n      firstName: [this.item ? this.item.firstName : ''],\r\n      lastName: [this.item ? this.item.lastName : ''],\r\n      email: [this.item ? this.item.email : ''],\r\n      phoneNumber: [this.item ? this.item.phoneNumber : ''],\r\n      message: [this.item ? this.item.message : ''],\r\n      status: [this.item ? this.item.status : ''],\r\n    });\r\n  }\r\n\r\n  loadModel() {\r\n    this.contact = {\r\n      id: this.item ? this.item.id : '',\r\n      firstName: this.pageContentForm.value.firstName,\r\n      lastName: this.pageContentForm.value.lastName,\r\n      email: this.pageContentForm.value.email,\r\n      phoneNumber: this.pageContentForm.value.phoneNumber,\r\n      message: this.pageContentForm.value.message,\r\n      status: this.item.status,\r\n    };\r\n  }\r\n\r\n  callServiceToSave() {\r\n    this.pageContentService\r\n      .save(this.contact)\r\n      .then(() => {\r\n        this.ngbActiveModal.close();\r\n      })\r\n      .catch((er) => {\r\n        if (er.error.hasError) {\r\n          // console.log(er.error.message);\r\n        }\r\n      });\r\n  }\r\n\r\n  progress() {\r\n    if (this.pageContentForm.invalid) {\r\n      // console.log(this.pageContentForm);\r\n      return;\r\n    }\r\n\r\n    this.loadModel();\r\n    this.contact.status = \"In Progress\";\r\n    this.callServiceToSave();\r\n  }\r\n\r\n  complete() {\r\n    if (this.pageContentForm.invalid) {\r\n      // console.log(this.pageContentForm);\r\n      return;\r\n    }\r\n\r\n    this.loadModel();\r\n    this.contact.status = \"Completed\";\r\n    this.callServiceToSave();\r\n  }\r\n\r\n  close(event: any) {\r\n    this.ngbActiveModal.dismiss();\r\n  }\r\n}\r\n","<app-modal-header [data]=\"modalHeader\" (onAction)=\"close($event)\"></app-modal-header>\r\n<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"card tab2-card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"tab-pane fade active show\" id=\"account\" role=\"tabpanel\" aria-labelledby=\"account-tab\">\r\n            <form [formGroup]=\"pageContentForm\" class=\"needs-validation user-add\" novalidate=\"\">\r\n              <h4>Contact Details</h4>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-md-4\"> First Name</label>\r\n                <input class=\"form-control col-xl-9 col-md-8\" type=\"text\" formControlName=\"firstName\" readonly />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-md-4\"> Last Name</label>\r\n                <input class=\"form-control col-xl-9 col-md-8\" type=\"text\" formControlName=\"lastName\" readonly />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-md-4\"> Email</label>\r\n                <input class=\"form-control col-xl-9 col-md-8\" type=\"text\" formControlName=\"email\" readonly />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-md-4\"> Phone Number</label>\r\n                <input class=\"form-control col-xl-9 col-md-8\" type=\"text\" formControlName=\"phoneNumber\" readonly />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-md-4\"> Message</label>\r\n                <textarea class=\"form-control col-xl-9 col-md-8\" rows=\"4\" formControlName=\"message\" readonly></textarea>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label class=\"col-xl-3 col-md-4\"> Status</label>\r\n                <input class=\"form-control col-xl-9 col-md-8\" type=\"text\" formControlName=\"status\" readonly />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n<app-modal-footer [data]=\"modalFooter\" (onAction)=\"complete()\"></app-modal-footer>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListContactComponent } from './list-contact/list-contact.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'list-contact',\r\n        component: ListContactComponent,\r\n        data: {\r\n          title: 'Contact List',\r\n          breadcrumb: 'Contact List',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ContactRouting {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ContactDetailComponent } from './contact-details/contact-details.component';\r\nimport { ContactRouting } from './contact-routing.module';\r\nimport { ListContactComponent } from './list-contact/list-contact.component';\r\n\r\n@NgModule({\r\n  declarations: [ListContactComponent, ContactDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ContactRouting,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    SharedModule,\r\n    NgbModalModule,\r\n    Ng2SmartTableModule,\r\n    CKEditorModule,\r\n  ],\r\n})\r\nexport class ContactModule {}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h5>Contact Details</h5>\r\n    </div>\r\n    <div class=\"card-body vendor-table\">\r\n      <div class=\"custom-datatable media-datatable\">\r\n        <div class=\"table-responsive\">\r\n          <ng2-smart-table\r\n            [settings]=\"settings\"\r\n            (edit)=\"openPopup($event)\"\r\n            (create)=\"openPopup(null)\"\r\n            (delete)=\"delete($event)\"\r\n            [(source)]=\"contacts\"\r\n          ></ng2-smart-table>\r\n        </div>\r\n      </div>\r\n      <app-paging-server-view\r\n        *ngIf=\"data?.totalPage > 1\"\r\n        [data]=\"data\"\r\n        (page)=\"onPage($event)\"\r\n      ></app-paging-server-view>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <button (click)=\"openCreate()\">Add</button> -->\r\n<!-- Container-fluid Ends-->\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PageModel, TypeSweetAlertIcon } from 'src/app/lib/data/models';\r\nimport { ReturnMessage } from 'src/app/lib/data/models/common/return-message.model';\r\nimport { ContactModel } from 'src/app/lib/data/models/contact/contact.model';\r\nimport { PageContentModel } from 'src/app/lib/data/models/pageContent/pageContent.model';\r\nimport { ContactService } from 'src/app/lib/data/services/contacts/contact.service';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { PageContentService } from 'src/app/lib/data/services/pageContents/pageContent.service';\r\nimport { CustomViewCellStringComponent } from 'src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component';\r\nimport { CustomViewCellComponent } from 'src/app/shared/components/customViewCell/customViewCell.component';\r\nimport { ContactDetailComponent } from '../contact-details/contact-details.component';\r\n\r\n@Component({\r\n  selector: 'app-list-page-content',\r\n  templateUrl: './list-contact.component.html',\r\n  styleUrls: ['./list-contact.component.scss'],\r\n  providers: [ContactService, DatePipe],\r\n})\r\nexport class ListContactComponent {\r\n  public contacts: ContactModel[];\r\n  public data: PageModel<ContactModel>;\r\n  params: any = {};\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private contactService: ContactService,\r\n    private messageService: MessageService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    this.getList();\r\n  }\r\n\r\n  public settings = {\r\n    mode: 'external',\r\n    pager: {\r\n      display: true,\r\n      perPage: 10,\r\n    },\r\n    actions: {\r\n      position: 'right',\r\n      add: false,\r\n      delete: false,\r\n    },\r\n    columns: {\r\n      firstName: {\r\n        title: 'First Name',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      lastName: {\r\n        title: 'Last Name',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      phoneNumber: {\r\n        title: 'Phone Number',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellComponent,\r\n      },\r\n      email: { title: 'Email' },\r\n      status: { title: 'Status' },\r\n      createByDate: {\r\n        title: 'Create Date',\r\n        valuePrepareFunction: (date) => {\r\n          return this.datePipe.transform(new Date(date), 'dd/MM/yyyy');\r\n        },\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellComponent,\r\n      },\r\n    },\r\n  };\r\n\r\n  openPopup(item: any) {\r\n    var modalRef = this.modalService.open(ContactDetailComponent, {\r\n      size: 'lg',\r\n    });\r\n    if (item) modalRef.componentInstance.item = item.data;\r\n\r\n    if (!item) modalRef.componentInstance.item = item as PageContentModel;\r\n\r\n    modalRef.result.then(\r\n      (close) => {\r\n        this.getList();\r\n      },\r\n      (dismiss) => {}\r\n    );\r\n  }\r\n\r\n  delete(event: any) {\r\n    this.messageService\r\n      .confirm(`Do you want to delete the category?`, 'Yes')\r\n      .then((res) => {\r\n        if (res.isConfirmed) {\r\n          let contact = event.data as ContactModel;\r\n          this.contactService.delete(contact).then(() => {\r\n            this.messageService.notification(\r\n              'Contact has been deleted',\r\n              TypeSweetAlertIcon.SUCCESS\r\n            );\r\n            this.getList();\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getList() {\r\n    this.contactService\r\n      .getList(null)\r\n      .then((res: ReturnMessage<ContactModel[]>) => {\r\n        if (!res.hasError) {\r\n          this.contacts = res.data;\r\n          // console.log('contact', res.data);\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        if (er.error.hasError) {\r\n          // console.log(er.error.message);\r\n        }\r\n      });\r\n  }\r\n\r\n  onPage(event) {\r\n    this.params.pageIndex = event;\r\n    this.getList();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClientService } from 'src/app/lib/http/http-client';\r\nimport { ContactModel } from '../../models/contact/contact.model';\r\n\r\n@Injectable()\r\nexport class ContactService {\r\n  private url = '/api/contact';\r\n\r\n  constructor(private httpClient: HttpClientService) {}\r\n\r\n  getList(request: any) {\r\n    return this.httpClient.getObservable(this.url, request).toPromise();\r\n  }\r\n\r\n  create(model: ContactModel) {\r\n    return this.httpClient.postObservable(this.url, model).toPromise();\r\n  }\r\n\r\n  update(model: ContactModel) {\r\n    return this.httpClient.putObservable(this.url, model).toPromise();\r\n  }\r\n\r\n  delete(model: ContactModel) {\r\n    const url = `${this.url}/?id=${model?.id}`;\r\n    return this.httpClient.deleteObservable(url).toPromise();\r\n  }\r\n\r\n  save(model) {\r\n    if (model.id) {\r\n      return this.update(model);\r\n    }\r\n    return this.create(model);\r\n  }\r\n}\r\n"]}