{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_8__","ListSocialMediaComponent","modalService","socialService","messageService","mode","actions","position","columns","iconUrl","filter","title","type","renderComponent","src_app_shared_components_viewimagecell_viewimagecell_component__WEBPACK_IMPORTED_MODULE_3__","src_app_shared_components_custom_view_cell_string_custom_view_cell_string_component__WEBPACK_IMPORTED_MODULE_1__","link","valuePrepareFunction","value","displayOrder","src_app_shared_components_customViewCell_customViewCell_component__WEBPACK_IMPORTED_MODULE_2__","get","params","then","res","hasError","socialMedias","data","results","er","error","event","modalRef","open","_social_media_detail_social_media_detail_component__WEBPACK_IMPORTED_MODULE_4__","size","componentInstance","item","result","getSocialMedias","dismiss","confirm","isConfirmed","socialMedia","notification","src_app_lib_data_models__WEBPACK_IMPORTED_MODULE_0__","pageIndex","selectors","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_7__","SocialMediaDetailComponent","formBuilder","ngbActiveModal","modalFile","src_app_shared_components_modals_models_modal_model__WEBPACK_IMPORTED_MODULE_1__","typeFile","multiBoolen","enityType","socialMediaForm","group","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","modalHeader","modalFooter","controls","id","files","listFile","submitted","console","log","invalid","save","close","alert","message","_a","JSON","stringify","loadItemForm","createModal","fileURL","push","add","remove","forEach","e","i","includes","splice","removeAll","setValue","join","routes","path","children","component","_list_social_media_list_social_media_component__WEBPACK_IMPORTED_MODULE_0__","breadcrumb","SocialMediasRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","SocialMediasModule","src_app_lib_data_services_social_media_social_media_service__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","_social_medias_routing_module__WEBPACK_IMPORTED_MODULE_4__","_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__","ng2_smart_table__WEBPACK_IMPORTED_MODULE_9__","src_app_shared_shared_module__WEBPACK_IMPORTED_MODULE_1__","declarations","_list_social_media_list_social_media_component__WEBPACK_IMPORTED_MODULE_2__","_social_media_detail_social_media_detail_component__WEBPACK_IMPORTED_MODULE_3__","CustomViewCellStringComponent","inputs","rowData","_angular_core__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/components/social-medias/list-social-media/list-social-media.component.html","webpack:///src/app/components/social-medias/list-social-media/list-social-media.component.ts","webpack:///src/app/components/social-medias/social-media-detail/social-media-detail.component.html","webpack:///src/app/components/social-medias/social-media-detail/social-media-detail.component.ts","webpack:///src/app/components/social-medias/social-medias-routing.module.ts","webpack:///src/app/components/social-medias/social-medias.module.ts","webpack:///src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.ts","webpack:///src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.html"],"sourcesContent":["<div class=\"container-fluid\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h5>Social Media Details</h5>\r\n    </div>\r\n    <div class=\"card-body vendor-table\">\r\n      <div id=\"batchDelete\" class=\"custom-datatable media-datatable\">\r\n        <div class=\"table-responsive\">\r\n          <ng2-smart-table\r\n            [settings]=\"settings\"\r\n            [(source)]=\"socialMedias\"\r\n            (create)=\"open(null)\"\r\n            (edit)=\"open($event)\"\r\n            (delete)=\"delete($event)\"\r\n          ></ng2-smart-table>\r\n        </div>\r\n      </div>\r\n      <app-paging-server-view *ngIf=\"data?.totalPage > 1\"\r\n        [data]=\"data\"\r\n        (page)=\"onPage($event)\"\r\n      ></app-paging-server-view>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  PageModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n} from 'src/app/lib/data/models';\r\nimport { SocialMediaModel } from 'src/app/lib/data/models/social-medias/social-media.model';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { SocialMediaService } from 'src/app/lib/data/services/social-media/social-media.service';\r\nimport { CustomViewCellStringComponent } from 'src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component';\r\nimport { CustomViewCellComponent } from 'src/app/shared/components/customViewCell/customViewCell.component';\r\nimport { ViewImageCellComponent } from 'src/app/shared/components/viewimagecell/viewimagecell.component';\r\nimport { SocialMediaDetailComponent } from '../social-media-detail/social-media-detail.component';\r\n\r\n@Component({\r\n  selector: 'app-list-social-media',\r\n  templateUrl: './list-social-media.component.html',\r\n  styleUrls: ['./list-social-media.component.scss'],\r\n})\r\nexport class ListSocialMediaComponent implements OnInit {\r\n  public socialMedias: SocialMediaModel[];\r\n  public data: PageModel<SocialMediaModel>;\r\n  params: any = {};\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private socialService: SocialMediaService,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  getSocialMedias() {\r\n    this.socialService\r\n      .get({ params: this.params })\r\n      .then((res: ReturnMessage<PageModel<SocialMediaModel>>) => {\r\n        if (!res.hasError) {\r\n          this.socialMedias = res.data.results;\r\n          this.data = res.data;\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        if (er.error.hasError) {\r\n        }\r\n      });\r\n  }\r\n\r\n  public settings = {\r\n    mode: 'external',\r\n    actions: {\r\n      position: 'right',\r\n    },\r\n    columns: {\r\n      iconUrl: {\r\n        filter: false,\r\n        title: 'Image',\r\n        type: 'custom',\r\n        renderComponent: ViewImageCellComponent,\r\n      },\r\n      title: {\r\n        title: 'Title',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      link: {\r\n        title: 'Link',\r\n        type: 'html',\r\n        valuePrepareFunction: (value) => {\r\n          return `<a href='${value}' target=\"_blank\">${value}</a>`\r\n        },\r\n      },\r\n      displayOrder: {\r\n        title: 'Display Order',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellComponent,\r\n      },\r\n    },\r\n  };\r\n\r\n  open(event: any) {\r\n    var modalRef = this.modalService.open(SocialMediaDetailComponent, {\r\n      size: 'lg',\r\n    });\r\n    if (event) {\r\n      modalRef.componentInstance.item = event?.data;\r\n    }\r\n    modalRef.result.then(() => this.getSocialMedias(),(dismiss)=>{});\r\n  }\r\n\r\n  delete(event: any) {\r\n    this.messageService\r\n      .confirm(`Do you want to delete the social media?`, 'Yes')\r\n      .then((res) => {\r\n        if (res.isConfirmed) {\r\n          let socialMedia = event.data as SocialMediaModel;\r\n          this.socialService.delete(socialMedia).then(() => {\r\n            this.messageService.notification(\r\n              'Social media has been deleted',\r\n              TypeSweetAlertIcon.SUCCESS\r\n            );\r\n            this.getSocialMedias();\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  onPage(event) {\r\n    this.params.pageIndex = event;\r\n    this.getSocialMedias();\r\n  }\r\n  ngOnInit(): void {\r\n    this.params.pageIndex = 0;\r\n    this.getSocialMedias();\r\n  }\r\n}\r\n","<app-modal-header\r\n  [data]=\"modalHeader\"\r\n  (onAction)=\"close($event)\"\r\n></app-modal-header>\r\n<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"card tab2-card\">\r\n        <div class=\"card-body\">\r\n          <div\r\n            class=\"tab-pane fade active show\"\r\n            id=\"account\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"account-tab\"\r\n          >\r\n            <form\r\n              [formGroup]=\"socialMediaForm\"\r\n              class=\"needs-validation user-add\"\r\n              novalidate=\"\"\r\n            >\r\n              <h4>Social Media Details</h4>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Title</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom0\"\r\n                  type=\"text\"\r\n                  required\r\n                  formControlName=\"title\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid ':\r\n                      (SocialMediaFormControl.title.touched || submitted) &&\r\n                      (SocialMediaFormControl.title.errors?.required ||\r\n                        SocialMediaFormControl.title.errors?.pattern)\r\n                  }\"\r\n                />\r\n                <div class=\"invalid-feedback col-md-5 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (SocialMediaFormControl.title.touched || submitted) &&\r\n                      (SocialMediaFormControl.title.errors?.required ||\r\n                        SocialMediaFormControl.title.errors?.pattern)\r\n                    \"\r\n                  >\r\n                    Title is required\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom1\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Link\r\n                </label>\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom1\"\r\n                  type=\"text\"\r\n                  required=\"\"\r\n                  formControlName=\"link\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid ':\r\n                      (SocialMediaFormControl.link.touched || submitted) &&\r\n                      SocialMediaFormControl.link.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"invalid-feedback col-md-5 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (SocialMediaFormControl.link.touched || submitted) &&\r\n                      SocialMediaFormControl.link.errors?.required\r\n                    \"\r\n                  >\r\n                    Link is required\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Icon</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom2\"\r\n                  type=\"text\"\r\n                  required=\"\"\r\n                  formControlName=\"iconUrl\"\r\n                  hidden\r\n                />\r\n\r\n                <div class=\"col-xl-8 col-md-7 p-0\">\r\n                  <app-upload-file\r\n                    [data]=\"modalFile\"\r\n                    [fileURL]=\"fileURL\"\r\n                    styleFile=\"width: 100%; height: auto;\"\r\n                    (onChange)=\"onChangeData($event)\"\r\n                  ></app-upload-file>\r\n                </div>\r\n                <div\r\n                  class=\"invalid-feedback col-md-5 offset-md-3\"\r\n                  style=\"display: block\"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      (SocialMediaFormControl.iconUrl.touched || submitted) &&\r\n                      SocialMediaFormControl.iconUrl.errors?.required\r\n                    \"\r\n                  >\r\n                    Icon URL is required\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom3\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Display Order</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom3\"\r\n                  type=\"number\"\r\n                  required=\"\"\r\n                  formControlName=\"displayOrder\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid ':\r\n                      (SocialMediaFormControl.displayOrder.touched ||\r\n                        submitted) &&\r\n                      SocialMediaFormControl.displayOrder.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"invalid-feedback col-md-5 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (SocialMediaFormControl.displayOrder.touched ||\r\n                        submitted) &&\r\n                      SocialMediaFormControl.displayOrder.errors?.required\r\n                    \"\r\n                  >\r\n                    Display Order is required\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n<app-modal-footer\r\n  [data]=\"modalFooter\"\r\n  (onAction)=\"saveSocialMedia($event)\"\r\n></app-modal-footer>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FileDtoModel, TypeSweetAlertIcon } from 'src/app/lib/data/models';\r\nimport { SocialMediaModel } from 'src/app/lib/data/models/social-medias/social-media.model';\r\nimport { FileService } from 'src/app/lib/data/services';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { SocialMediaService } from 'src/app/lib/data/services/social-media/social-media.service';\r\nimport {\r\n  EntityType,\r\n  ModalFile,\r\n  ModalFooterModel,\r\n  ModalHeaderModel,\r\n  TypeFile,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\n\r\n@Component({\r\n  selector: 'app-social-media-detail',\r\n  templateUrl: './social-media-detail.component.html',\r\n  styleUrls: ['./social-media-detail.component.scss'],\r\n})\r\nexport class SocialMediaDetailComponent implements OnInit {\r\n  public socialMediaForm: FormGroup;\r\n  public socialMedia: SocialMediaModel;\r\n  public modalHeader: ModalHeaderModel;\r\n  public modalFooter: ModalFooterModel;\r\n  public item: any;\r\n  submitted = false;\r\n\r\n  public modalFile: ModalFile;\r\n  public fileURL: (String | ArrayBuffer)[];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ngbActiveModal: NgbActiveModal,\r\n    private socialService: SocialMediaService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.modalFile = new ModalFile();\r\n    this.modalFile.typeFile = TypeFile.IMAGE;\r\n    this.modalFile.multiBoolen = false;\r\n    this.modalFile.enityType = EntityType.SOCIALMEDIA;\r\n  }\r\n\r\n  loadItemForm() {\r\n    this.socialMediaForm = this.formBuilder.group({\r\n      title: [this.item ? this.item.title : '', [Validators.required]],\r\n      link: [this.item ? this.item.link : '', [Validators.required]],\r\n      iconUrl: [this.item ? this.item.iconUrl : '', [Validators.required]],\r\n      displayOrder: [\r\n        this.item ? this.item.displayOrder : '',\r\n        [Validators.required],\r\n      ],\r\n    });\r\n  }\r\n\r\n  createModal() {\r\n    this.modalHeader = new ModalHeaderModel();\r\n    this.modalHeader.title =\r\n      this.item != null ? `Update ${this.item.title}` : `Add Social Media`;\r\n    this.modalFooter = new ModalFooterModel();\r\n    this.modalFooter.title = 'Save';\r\n  }\r\n\r\n  saveSocialMedia(event: any) {\r\n    this.socialMedia = {\r\n      title: this.socialMediaForm.controls.title.value,\r\n      link: this.socialMediaForm.controls.link.value,\r\n      iconUrl: this.socialMediaForm.controls.iconUrl.value,\r\n      displayOrder: this.socialMediaForm.controls.displayOrder.value,\r\n      id: this.item ? this.item.id : '',\r\n      files: this.modalFile.listFile,\r\n    };\r\n\r\n    this.submitted = true;\r\n    console.log(this.item);\r\n\r\n    if (this.socialMediaForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.socialService\r\n      .save(this.socialMedia)\r\n      .then((res) => {\r\n        this.messageService.notification(\r\n          this.item ? 'Social Media has been edited' : 'Social Media has been created',\r\n          TypeSweetAlertIcon.SUCCESS\r\n        );\r\n\r\n        this.submitted = false;\r\n        this.ngbActiveModal.close();\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ?? JSON.stringify(er.error),\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n      });\r\n  }\r\n  get SocialMediaFormControl() {\r\n    return this.socialMediaForm.controls;\r\n  }\r\n\r\n  close(event: any) {\r\n    this.ngbActiveModal.dismiss();\r\n  }\r\n  ngOnInit(): void {\r\n    this.loadItemForm();\r\n    this.createModal();\r\n\r\n    if (this.item) {\r\n      this.fileURL = [];\r\n      this.fileURL.push(this.item.iconUrl);\r\n    }\r\n  }\r\n\r\n  onChangeData(event: { add: string[]; remove: string; removeAll: boolean }) {\r\n    if (event == null) {\r\n      return;\r\n    }\r\n\r\n    if (!this.fileURL) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    if (event.add) {\r\n      this.fileURL = [...this.fileURL, ...event.add];\r\n    }\r\n\r\n    if (event.remove) {\r\n      this.fileURL.forEach((e: string, i) => {\r\n        if (e.includes(event.remove)) {\r\n          this.fileURL.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (event.removeAll) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    this.socialMediaForm.controls.iconUrl.setValue(this.fileURL.join(','));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListSocialMediaComponent } from './list-social-media/list-social-media.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'list-social-medias',\r\n        component: ListSocialMediaComponent,\r\n        data: {\r\n          title: 'Social Media List',\r\n          breadcrumb: 'Social Media List',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SocialMediasRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { SocialMediaService } from 'src/app/lib/data/services/social-media/social-media.service';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ListSocialMediaComponent } from './list-social-media/list-social-media.component';\r\nimport { SocialMediaDetailComponent } from './social-media-detail/social-media-detail.component';\r\nimport { SocialMediasRoutingModule } from './social-medias-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [ListSocialMediaComponent, SocialMediaDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SocialMediasRoutingModule,\r\n    NgbModule,\r\n    Ng2SmartTableModule,\r\n    SharedModule,\r\n  ],\r\n  providers: [SocialMediaService],\r\n})\r\nexport class SocialMediasModule {}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-custom-view-cell-string',\r\n  templateUrl: './custom-view-cell-string.component.html',\r\n  styleUrls: ['./custom-view-cell-string.component.scss']\r\n})\r\n\r\nexport class CustomViewCellStringComponent implements OnInit {\r\n  \r\n  @Input() value: any;    // This hold the cell value\r\n  @Input() rowData: any;  // This holds the entire row object\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"text-left\">{{ value }}</div>"]}