{"version":3,"file":"src_app_components_banners_banners_module_ts-es2015.js","mappings":"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","sources":["./src/app/components/banners/banners-detail/banners-detail.component.ts","./src/app/components/banners/banners-detail/banners-detail.component.html","./src/app/components/banners/banners-routing.module.ts","./src/app/components/banners/banners.module.ts","./src/app/components/banners/list-banners/list-banners.component.ts","./src/app/components/banners/list-banners/list-banners.component.html","./src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.ts","./src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FileDtoModel, TypeSweetAlertIcon } from 'src/app/lib/data/models';\r\nimport { BannerModel } from 'src/app/lib/data/models/banners/banner.model';\r\nimport { FileService } from 'src/app/lib/data/services';\r\nimport { BannersService } from 'src/app/lib/data/services/banners/banners.service';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport {\r\n  EntityType,\r\n  ModalFile,\r\n  ModalFooterModel,\r\n  ModalHeaderModel,\r\n  TypeFile,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\n\r\n@Component({\r\n  selector: 'app-banners-detail',\r\n  templateUrl: './banners-detail.component.html',\r\n  styleUrls: ['./banners-detail.component.scss'],\r\n  providers: [],\r\n})\r\nexport class BannersDetailComponent implements OnInit {\r\n  public bannersForm: FormGroup;\r\n  public item: any;\r\n  public banner: BannerModel;\r\n  public modalHeader: ModalHeaderModel;\r\n  public modalFooter: ModalFooterModel;\r\n  submitted = false;\r\n\r\n  public modalFile: ModalFile;\r\n  public fileURL: (string | ArrayBuffer)[];\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ngbActiveModal: NgbActiveModal,\r\n    private bannersService: BannersService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.modalFile = new ModalFile();\r\n    this.modalFile.typeFile = TypeFile.IMAGE;\r\n    this.modalFile.multiBoolen = false;\r\n    this.modalFile.enityType = EntityType.BANNER;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadFormItem();\r\n    this.createModal();\r\n    if (this.item) {\r\n      this.fileURL = [];\r\n      this.item.imageUrl.split(',').forEach((it) => {\r\n        this.fileURL.push(it);\r\n      });\r\n    }\r\n  }\r\n  loadFormItem() {\r\n    this.bannersForm = this.formBuilder.group({\r\n      title: [this.item ? this.item.title : '', Validators.required],\r\n      description: [this.item ? this.item.description : ''],\r\n      link: [this.item ? this.item.link : ''],\r\n      imageUrl: [this.item ? this.item.imageUrl : '', Validators.required],\r\n      displayOrder: [\r\n        this.item ? this.item.displayOrder : '',\r\n        Validators.required,\r\n      ],\r\n    });\r\n  }\r\n\r\n  createModal() {\r\n    this.modalHeader = new ModalHeaderModel();\r\n    this.modalHeader.title =\r\n      this.item != null ? `Update ${this.item.title}` : `Add Banner`;\r\n    this.modalFooter = new ModalFooterModel();\r\n    this.modalFooter.title = 'Save';\r\n  }\r\n\r\n  get bannersFormControl() {\r\n    return this.bannersForm.controls;\r\n  }\r\n\r\n  saveBanner(event: any) {\r\n    this.banner = {\r\n      title: this.bannersForm.controls.title.value,\r\n      description: this.bannersForm.controls.description.value,\r\n      link: this.bannersForm.controls.link.value,\r\n      imageUrl: this.bannersForm.controls.imageUrl.value,\r\n      displayOrder: this.bannersForm.controls.displayOrder.value,\r\n      id: this.item ? this.item.id : '',\r\n      files: this.modalFile.listFile,\r\n    };\r\n\r\n    this.submitted = true;\r\n\r\n    if (this.bannersForm.valid) {\r\n\r\n      this.bannersService\r\n        .save(this.banner)\r\n        .then((res) => {\r\n          this.messageService.notification(\r\n           this.item? 'Banner has been edited':'Banner has been created',\r\n            TypeSweetAlertIcon.SUCCESS\r\n          )\r\n          this.bannersForm.reset();\r\n          this.submitted = false;\r\n          this.ngbActiveModal.close();\r\n        })\r\n        .catch((er) => {\r\n          this.messageService.alert(\r\n            er.error.message ?? JSON.stringify(er.error.error) ?? \"Server Disconnected\",\r\n            TypeSweetAlertIcon.ERROR\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  close(event: any) {\r\n    this.ngbActiveModal.dismiss();\r\n  }\r\n\r\n  onChangeData(event: { add: string[]; remove: string; removeAll: boolean }) {\r\n    if (event == null) {\r\n      return;\r\n    }\r\n\r\n    if (!this.fileURL) {\r\n      this.fileURL = [];\r\n    }\r\n    if (event.add) {\r\n      this.fileURL = [...this.fileURL, ...event.add];\r\n    }\r\n    if (event.remove) {\r\n      this.fileURL.forEach((e: string, i) => {\r\n        if (e.includes(event.remove)) {\r\n          this.fileURL.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (event.removeAll) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    this.bannersForm.controls.imageUrl.setValue(this.fileURL.join(','));\r\n    console.log(this.fileURL);\r\n  }\r\n}\r\n","<app-modal-header\r\n  [data]=\"modalHeader\"\r\n  (onAction)=\"close($event)\"\r\n></app-modal-header>\r\n<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"card tab2-card\">\r\n        <div class=\"card-body\">\r\n          <div\r\n            class=\"tab-pane fade active show\"\r\n            id=\"account\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"account-tab\"\r\n          >\r\n            <form\r\n              [formGroup]=\"bannersForm\"\r\n              class=\"needs-validation user-add\"\r\n              novalidate=\"\"\r\n            >\r\n              <h4>Banner Details</h4>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Title</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom0\"\r\n                  type=\"text\"\r\n                  required\r\n                  formControlName=\"title\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid ':\r\n                      (bannersFormControl.title.touched || submitted) &&\r\n                      bannersFormControl.title.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (bannersFormControl.title.touched || submitted) &&\r\n                      bannersFormControl.title.errors?.required\r\n                    \"\r\n                  >\r\n                    Title is required\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>&nbsp;</span> Description</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"\"\r\n                  type=\"text\"\r\n                  formControlName=\"description\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>&nbsp;</span> Link</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom1\"\r\n                  type=\"text\"\r\n                  formControlName=\"link\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Image</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom2\"\r\n                  type=\"text\"\r\n                  formControlName=\"imageUrl\"\r\n                  hidden\r\n                  [ngClass]=\"{\r\n                    'is-invalid ':\r\n                      (bannersFormControl.imageUrl.touched || submitted) &&\r\n                      bannersFormControl.imageUrl.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"col-xl-8 col-md-7 p-0\">\r\n                  <app-upload-file\r\n                    [data]=\"modalFile\"\r\n                    [fileURL]=\"fileURL\"\r\n                    [isBannerUpload]=\"true\"\r\n                    styleFile=\"width: 100%; height: auto;\"\r\n                    (onChange)=\"onChangeData($event)\"\r\n                  ></app-upload-file>\r\n                </div>\r\n\r\n                <div class=\"invalid-feedback col-md-3 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (bannersFormControl.imageUrl.touched || submitted) &&\r\n                      bannersFormControl.imageUrl.errors?.required\r\n                    \"\r\n                  >\r\n                    Image is required\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom3\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Display Order</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom3\"\r\n                  type=\"number\"\r\n                  required=\"\"\r\n                  formControlName=\"displayOrder\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid ':\r\n                      (bannersFormControl.displayOrder.touched || submitted) &&\r\n                      bannersFormControl.displayOrder.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"invalid-feedback col-md-5 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (bannersFormControl.displayOrder.touched || submitted) &&\r\n                      bannersFormControl.displayOrder.errors?.required\r\n                    \"\r\n                  >\r\n                    Display Order is required\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n<app-modal-footer\r\n  [data]=\"modalFooter\"\r\n  (onAction)=\"saveBanner($event)\"\r\n></app-modal-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListBannersComponent } from './list-banners/list-banners.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'list-banners',\r\n        component: ListBannersComponent,\r\n        data: {\r\n          title: \"Banner List\",\r\n          breadcrumb: \"Banner List\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class BannersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ListBannersComponent } from './list-banners/list-banners.component';\r\nimport { BannersRoutingModule } from './banners-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { BannersService } from 'src/app/lib/data/services';\r\nimport { BannersDetailComponent } from './banners-detail/banners-detail.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    Ng2SmartTableModule,\r\n    BannersRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [ListBannersComponent, BannersDetailComponent],\r\n  providers: [BannersService],\r\n})\r\nexport class BannersModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  PageModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n} from 'src/app/lib/data/models';\r\nimport { BannerModel } from 'src/app/lib/data/models/banners/banner.model';\r\n\r\nimport { BannersService } from 'src/app/lib/data/services/banners/banners.service';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { CustomViewCellStringComponent } from 'src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component';\r\nimport { CustomViewCellComponent } from 'src/app/shared/components/customViewCell/customViewCell.component';\r\nimport { ViewImageCellComponent } from 'src/app/shared/components/viewimagecell/viewimagecell.component';\r\n\r\nimport { BannersDetailComponent } from '../banners-detail/banners-detail.component';\r\n\r\n@Component({\r\n  selector: 'app-list-banners',\r\n  templateUrl: './list-banners.component.html',\r\n  styleUrls: ['./list-banners.component.scss'],\r\n  providers: [],\r\n})\r\nexport class ListBannersComponent implements OnInit {\r\n  public banners: BannerModel[];\r\n  public data: PageModel<BannerModel>;\r\n  params: any = {};\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private bannersService: BannersService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.getBanners();\r\n  }\r\n  ngOnInit() {}\r\n  public settings = {\r\n    mode: 'external',\r\n    actions: {\r\n      position: 'right',\r\n    },\r\n    columns: {\r\n      imageUrl: {\r\n        filter: false,\r\n        title: 'Image',\r\n        type: 'custom',\r\n        renderComponent: ViewImageCellComponent,\r\n      },\r\n      title: {\r\n        title: 'Title',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      description: {\r\n        title: 'Description',\r\n      },\r\n      link:{\r\n        title: 'Link',\r\n        type: 'html',\r\n        valuePrepareFunction: (value) => {\r\n          return `<a href='${value}' target=\"_blank\">${value}</a>`\r\n        },\r\n      },\r\n      displayOrder: {\r\n        title: 'Display Order',\r\n        value: 'displayOrder',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellComponent,\r\n      },\r\n    },\r\n  };\r\n\r\n  getBanners() {\r\n    this.bannersService\r\n      .get({params: this.params})\r\n      .then((res: ReturnMessage<PageModel<BannerModel>>) => {\r\n        if (!res.hasError) {\r\n          this.banners = res.data.results;\r\n          this.data = res.data;\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n      });\r\n  }\r\n\r\n  openDetails(event: any) {\r\n    var modalRef = this.modalService.open(BannersDetailComponent, {\r\n      size: 'lg',\r\n    });\r\n    modalRef.componentInstance.item = event?.data;\r\n    modalRef.result.then(\r\n      (close) => this.getBanners(),\r\n      (dismiss) => {}\r\n    );\r\n  }\r\n\r\n  delete(event: any) {\r\n    this.messageService\r\n      .confirm(`Do you want to delete the banner?`, 'Yes')\r\n      .then((res) => {\r\n        if (res.isConfirmed) {\r\n          let banner = event.data as BannerModel;\r\n          this.bannersService\r\n            .delete(banner)\r\n            .then(() => {\r\n              this.messageService.notification(\r\n                'Banner has been deleted',\r\n                TypeSweetAlertIcon.SUCCESS\r\n              );\r\n              this.getBanners();\r\n            })\r\n            .catch((er) => {\r\n              this.messageService.alert(\r\n                er.error.message ??\r\n                  JSON.stringify(er.error.error) ??\r\n                  'Server Disconnected',\r\n                TypeSweetAlertIcon.ERROR\r\n              );\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  onPage(event) {\r\n    this.params.pageIndex = event;\r\n    this.getBanners();\r\n  }\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h5>Banner Details</h5>\r\n    </div>\r\n    <div class=\"card-body vendor-table\">\r\n      <div id=\"batchDelete\" class=\"custom-datatable media-datatable\">\r\n        <div class=\"table-responsive\">\r\n          <ng2-smart-table\r\n            [settings]=\"settings\"\r\n            [(source)]=\"banners\"\r\n            (create)=\"openDetails($event)\"\r\n            (delete)=\"delete($event)\"\r\n            (edit)=\"openDetails($event)\"\r\n          >\r\n          </ng2-smart-table>\r\n        </div>\r\n      </div>\r\n\r\n      <app-paging-server-view *ngIf=\"data?.totalPage > 1\"\r\n        [data]=\"data\"\r\n        (page)=\"onPage($event)\"\r\n      ></app-paging-server-view>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Container-fluid Ends-->\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-custom-view-cell-string',\r\n  templateUrl: './custom-view-cell-string.component.html',\r\n  styleUrls: ['./custom-view-cell-string.component.scss']\r\n})\r\n\r\nexport class CustomViewCellStringComponent implements OnInit {\r\n  \r\n  @Input() value: any;    // This hold the cell value\r\n  @Input() rowData: any;  // This holds the entire row object\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"text-left\">{{ value }}</div>"],"names":[],"sourceRoot":"webpack:///"}