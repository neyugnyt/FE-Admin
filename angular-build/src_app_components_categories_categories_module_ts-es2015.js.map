{"version":3,"file":"src_app_components_categories_categories_module_ts-es2015.js","mappings":"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","sources":["./src/app/components/categories/categories-details/categories-details.component.ts","./src/app/components/categories/categories-details/categories-details.component.html","./src/app/components/categories/categories-routing.module.ts","./src/app/components/categories/categories.module.ts","./src/app/components/categories/list-categories/list-categories.component.ts","./src/app/components/categories/list-categories/list-categories.component.html","./src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.ts","./src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component.html"],"sourcesContent":["import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TypeSweetAlertIcon } from 'src/app/lib/data/models';\r\nimport { CategoryModel } from 'src/app/lib/data/models/categories/category.model';\r\nimport { CategoryService } from 'src/app/lib/data/services/categories/category.service';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\n\r\nimport {\r\n  EntityType,\r\n  ModalFile,\r\n  ModalFooterModel,\r\n  ModalHeaderModel,\r\n  TypeFile,\r\n} from 'src/app/shared/components/modals/models/modal.model';\r\n@Component({\r\n  selector: 'app-categories-details',\r\n  templateUrl: './categories-details.component.html',\r\n  styleUrls: ['./categories-details.component.scss'],\r\n  providers: [CategoryService],\r\n})\r\nexport class CategoryDetailComponent implements OnInit {\r\n  public categoriesForm: FormGroup;\r\n  public modalHeader: ModalHeaderModel;\r\n  public modalFooter: ModalFooterModel;\r\n  public category: CategoryModel;\r\n  public modalFile: ModalFile;\r\n  public fileURL: (String | ArrayBuffer)[];\r\n  public item: any;\r\n  public regex: string =\r\n    '^[a-z|A-Z|ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂẾưăạảấầẩẫậắằẳẵặẹẻẽềềểếỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ|0-9 ,-.]*$';\r\n  submitted = false;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {}\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private categoryService: CategoryService,\r\n    private ngbActiveModal: NgbActiveModal,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.modalFile = new ModalFile();\r\n    this.modalFile.typeFile = TypeFile.IMAGE;\r\n    this.modalFile.multiBoolen = false;\r\n    this.modalFile.enityType = EntityType.CATEGORY;\r\n  }\r\n\r\n  get categoryFormsControl() {\r\n    return this.categoriesForm.controls;\r\n  }\r\n  save() {\r\n    if (this.categoriesForm.invalid) {\r\n      this.messageService.alert(\r\n        'Invalid Form\\n Make sure you input valid value !',\r\n        TypeSweetAlertIcon.ERROR\r\n      );\r\n      return;\r\n    }\r\n    this.submitted = true;\r\n    this.category = {\r\n      name: this.categoriesForm.value.name,\r\n      description: this.categoriesForm.value.description,\r\n      imageUrl: this.categoriesForm.value.imageUrl,\r\n      createdBy: this.item ? this.item.createdBy : this.item,\r\n      createdByName: this.item ? this.item.createdByName : this.item,\r\n      deletedBy: this.item ? this.item.deletedBy : this.item,\r\n      deletedByName: this.item ? this.item.deletedByName : this.item,\r\n      isActive: this.item ? this.item.isActive : this.item,\r\n      isDeleted: this.item ? this.item.isDeleted : this.item,\r\n      updatedBy: this.item ? this.item.updatedBy : this.item,\r\n      updatedByName: this.item ? this.item.updatedByName : this.item,\r\n      files: this.modalFile.listFile,\r\n      id: this.item ? this.item.id : '',\r\n    };\r\n    return this.categoryService\r\n      .save(this.category)\r\n      .then(() => {\r\n        this.messageService.notification(\r\n          this.item ? 'Update Success' : 'Create Success',\r\n          TypeSweetAlertIcon.SUCCESS\r\n        );\r\n        this.ngbActiveModal.close();\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n        console.log(er);\r\n      });\r\n  }\r\n\r\n  loadItem() {\r\n    this.categoriesForm = this.formBuilder.group({\r\n      name: [\r\n        this.item ? this.item.name : '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(50),\r\n          // Validators.pattern(this.regex),\r\n        ],\r\n      ],\r\n      description: [\r\n        this.item ? this.item.description : '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n          // Validators.pattern(this.regex),\r\n        ],\r\n      ],\r\n      imageUrl: [this.item ? this.item.imageUrl : ''],\r\n    });\r\n\r\n    this.modalHeader = new ModalHeaderModel();\r\n    this.modalHeader.title = this.item ? `Update ${this.item.name}` : `Add`;\r\n    this.modalFooter = new ModalFooterModel();\r\n    this.modalFooter.title = 'Save';\r\n  }\r\n\r\n  close(event: any) {\r\n    this.ngbActiveModal.dismiss();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadItem();\r\n    if (this.item) {\r\n      this.fileURL = [];\r\n      this.fileURL.push(this.item.imageUrl);\r\n    }\r\n  }\r\n\r\n  onChangeData(event: { add: string[]; remove: string; removeAll: boolean }) {\r\n    if (event == null) {\r\n      return;\r\n    }\r\n\r\n    if (!this.fileURL) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    if (event.add) {\r\n      this.fileURL = [...this.fileURL, ...event.add];\r\n    }\r\n\r\n    if (event.remove) {\r\n      this.fileURL.forEach((e: string, i) => {\r\n        if (e.includes(event.remove)) {\r\n          this.fileURL.splice(i, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (event.removeAll) {\r\n      this.fileURL = [];\r\n    }\r\n\r\n    this.categoriesForm.controls.imageUrl.setValue(this.fileURL.join(','));\r\n  }\r\n}\r\n","<app-modal-header\r\n  [data]=\"modalHeader\"\r\n  (onAction)=\"close($event)\"\r\n></app-modal-header>\r\n<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"card tab2-card\">\r\n        <div class=\"card-body\">\r\n          <div\r\n            class=\"tab-pane fade active show\"\r\n            id=\"account\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"account-tab\"\r\n          >\r\n            <form\r\n              [formGroup]=\"categoriesForm\"\r\n              class=\"needs-validation user-add\"\r\n              novalidate=\"\"\r\n            >\r\n              <h4>Category Details</h4>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Name</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom0\"\r\n                  type=\"text\"\r\n                  required=\"\"\r\n                  formControlName=\"name\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid':\r\n                      (categoryFormsControl.name.touched || submitted) &&\r\n                      categoryFormsControl.name.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"invalid-feedback col-md-5 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (categoryFormsControl.name.touched || submitted) &&\r\n                      categoryFormsControl.name.errors?.required\r\n                    \"\r\n                    >Required</span\r\n                  >\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"categoryFormsControl.name.hasError('maxlength')\"\r\n                    >Max: 50 characters</span\r\n                  >\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"categoryFormsControl.name.hasError('minlength')\"\r\n                    >Min: 3 characters</span\r\n                  >\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"\r\n                  ><span>*</span> Description</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom1\"\r\n                  type=\"text\"\r\n                  required=\"\"\r\n                  formControlName=\"description\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid':\r\n                      (categoryFormsControl.description.touched || submitted) &&\r\n                      categoryFormsControl.description.errors?.required\r\n                  }\"\r\n                />\r\n                <div class=\"invalid-feedback col-md-5 offset-md-3\">\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      (categoryFormsControl.description.touched || submitted) &&\r\n                      categoryFormsControl.description.errors?.required\r\n                    \"\r\n                    >Required</span\r\n                  >\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      categoryFormsControl.description.hasError('maxlength')\r\n                    \"\r\n                    >Max: 100 characters</span\r\n                  >\r\n                  <span\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      categoryFormsControl.description.hasError('minlength')\r\n                    \"\r\n                    >Min: 3 characters</span\r\n                  >\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group row\">\r\n                <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"\r\n                  >Image</label\r\n                >\r\n                <input\r\n                  class=\"form-control col-xl-8 col-md-7\"\r\n                  id=\"validationCustom2\"\r\n                  type=\"text\"\r\n                  required=\"\"\r\n                  formControlName=\"imageUrl\"\r\n                  hidden\r\n                />\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    (categoryFormsControl.imageUrl.touched || submitted) &&\r\n                    categoryFormsControl.imageUrl.errors?.required\r\n                  \"\r\n                  >Required</span\r\n                >\r\n                <div class=\"col-xl-8 col-md-7 p-0\">\r\n                  <app-upload-file\r\n                    [data]=\"modalFile\"\r\n                    [fileURL]=\"fileURL\"\r\n                    styleFile=\"width: 100%; height: auto;\"\r\n                    (onChange)=\"onChangeData($event)\"\r\n                  ></app-upload-file>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n<app-modal-footer [data]=\"modalFooter\" (onAction)=\"save()\"></app-modal-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CategoryDetailComponent } from './categories-details/categories-details.component';\r\nimport { ListCategoriesComponent } from './list-categories/list-categories.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      children: [\r\n        {\r\n          path: 'list-categories',\r\n          component: ListCategoriesComponent,\r\n          data: {\r\n            title: \"Category List\",\r\n            breadcrumb: \"Category List\"\r\n          }\r\n        },\r\n        {\r\n          path: 'create-categories',\r\n          component: CategoryDetailComponent,\r\n          data: {\r\n            title: \"Create Category\",\r\n            breadcrumb: \"Create Category\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CategoriesRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModal, NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { ListCategoriesComponent } from './list-categories/list-categories.component';\r\nimport { CategoryDetailComponent } from './categories-details/categories-details.component';\r\nimport { CategoriesRoutingModule } from './categories-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [ListCategoriesComponent, CategoryDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CategoriesRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    SharedModule,\r\n    NgbModalModule,\r\n    Ng2SmartTableModule\r\n  ]\r\n})\r\nexport class CategoriesModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  PageModel,\r\n  ReturnMessage,\r\n  TypeSweetAlertIcon,\r\n} from 'src/app/lib/data/models';\r\nimport { CategoryModel } from 'src/app/lib/data/models/categories/category.model';\r\nimport { FileService } from 'src/app/lib/data/services';\r\nimport { CategoryService } from 'src/app/lib/data/services/categories/category.service';\r\nimport { MessageService } from 'src/app/lib/data/services/messages/message.service';\r\nimport { CustomViewCellStringComponent } from 'src/app/shared/components/custom-view-cell-string/custom-view-cell-string.component';\r\nimport { ViewImageCellComponent } from 'src/app/shared/components/viewimagecell/viewimagecell.component';\r\nimport { CategoryDetailComponent } from '../categories-details/categories-details.component';\r\n\r\n@Component({\r\n  selector: 'app-list-categories',\r\n  templateUrl: './list-categories.component.html',\r\n  styleUrls: ['./list-categories.component.scss'],\r\n  providers: [CategoryService, FileService],\r\n})\r\nexport class ListCategoriesComponent implements OnInit {\r\n  public categories: CategoryModel[];\r\n  closeResult = '';\r\n  public data: PageModel<CategoryModel>;\r\n  params: any = {};\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private categoryService: CategoryService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.fetch();\r\n  }\r\n\r\n  public settings = {\r\n    mode: 'external',\r\n    actions: {\r\n      position: 'right',\r\n    },\r\n    columns: {\r\n      // imageUrl: {\r\n      //   title: 'Image',\r\n      //   type: 'custom',\r\n      //   renderComponent: ViewImageCellComponent,\r\n      // },\r\n      name: {\r\n        title: 'Name',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n      description: {\r\n        title: 'Description',\r\n        type: 'custom',\r\n        renderComponent: CustomViewCellStringComponent,\r\n      },\r\n    },\r\n  };\r\n\r\n  delete(event: any) {\r\n    this.messageService\r\n      .confirm(`Do you want to delete the category?`, 'Yes')\r\n      .then((res) => {\r\n        if (res.isConfirmed) {\r\n          let category = event.data as CategoryModel;\r\n          this.categoryService\r\n            .delete(category)\r\n            .then(() => {\r\n              this.messageService.notification(\r\n                'Category has been deleted',\r\n                TypeSweetAlertIcon.SUCCESS\r\n              );\r\n              this.fetch();\r\n            })\r\n            .catch((er) => {\r\n              this.messageService.alert(\r\n                er.error.message ??\r\n                  JSON.stringify(er.error.error) ??\r\n                  'Server Disconnected',\r\n                TypeSweetAlertIcon.ERROR\r\n              );\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  openPopup(item: any) {\r\n    var modalRef = this.modalService.open(CategoryDetailComponent, {\r\n      size: 'xl',\r\n    });\r\n    modalRef.componentInstance.item = item?.data;\r\n    return modalRef.result.then(\r\n      () => {\r\n        this.fetch();\r\n      },\r\n      (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      }\r\n    );\r\n  }\r\n\r\n  fetch() {\r\n    this.categoryService\r\n      .get({ params: this.params })\r\n      .then((res: ReturnMessage<PageModel<CategoryModel>>) => {\r\n        if (!res.hasError) {\r\n          this.categories = res.data.results;\r\n          this.data = res.data;\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        this.messageService.alert(\r\n          er.error.message ??\r\n            JSON.stringify(er.error.error) ??\r\n            'Server Disconnected',\r\n          TypeSweetAlertIcon.ERROR\r\n        );\r\n        // if (er.error.hasError) {\r\n        //   // console.log(er.error.message)\r\n        // }\r\n      });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onPage(event) {\r\n    this.params.pageIndex = event;\r\n    this.fetch();\r\n  }\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"card\">\r\n      <div class=\"card-header\">\r\n          <h5>Category Details</h5>\r\n      </div>\r\n      <div class=\"card-body vendor-table\">\r\n          <div id=\"batchDelete\" class=\"custom-datatable media-datatable\">\r\n              <div class=\"table-responsive\">\r\n                      <ng2-smart-table  [settings]=\"settings\" (edit)=\"openPopup($event)\" (create)=\"openPopup(null)\" (delete)=\"delete($event)\" [(source)]=\"categories\"></ng2-smart-table>\r\n              </div>\r\n          </div>\r\n          <app-paging-server-view *ngIf=\"data?.totalPage > 1\"\r\n            [data]=\"data\"\r\n            (page)=\"onPage($event)\"\r\n          ></app-paging-server-view>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <button (click)=\"openCreate()\">Add</button> -->\r\n<!-- Container-fluid Ends-->\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-custom-view-cell-string',\r\n  templateUrl: './custom-view-cell-string.component.html',\r\n  styleUrls: ['./custom-view-cell-string.component.scss']\r\n})\r\n\r\nexport class CustomViewCellStringComponent implements OnInit {\r\n  \r\n  @Input() value: any;    // This hold the cell value\r\n  @Input() rowData: any;  // This holds the entire row object\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"text-left\">{{ value }}</div>"],"names":[],"sourceRoot":"webpack:///"}